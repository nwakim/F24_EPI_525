{
  "hash": "e0a4ffcd107bc18e3e9ad9bf89f191bb",
  "result": {
    "markdown": "---\ntitle: \"Lesson 2: Data collection & numerical summaries\"\nauthor: \"Meike Niederhausen and Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#3070BF\"\ndate: \"10/2/2024\"\ncategories: [\"Week 1\"]\nformat: \n  revealjs:\n    theme: \"../simple_NW.scss\"\n    toc: true\n    toc-depth: 1\n    toc-title: Class Overview\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1600\n    height: 1100\n    footer: Lesson 2 Slides\n    html-math-method: mathjax\n    highlight-style: arrow\nexecute:\n  echo: true\n  freeze: auto\n---\n\n\n\n\n## Goals for today \n\n* (1.3) __Data collection principles__\n  - Population vs. sample\n  - Sampling methods\n  - Experiments vs. Observational studies\n\n* (1.2) __Intro to Data__\n  - Data types\n  - How are data stored in R?\n  - Working with data in R\n  \n* (1.4) __Summarizing numerical data__ \n  - Mean, median, mode, SD, IQR, range, 5 number summary\n  - Empirical Rule\n  - robust statistics\n\n* __R packages__ -> __[install for next class!!!]{style=\"color:darkorange\"}__\n\n# (1.2) Intro to Data\n\n![[Artwork by @allison_horst](https://allisonhorst.com/r-packages-functions)](/img_slides/horst_data_cowboy.png){fig-align=\"center\"}\n\n\n\n## How are data stored, how do we use them? \n\n- Often, data are in an Excel sheet, or a plain text file (.csv, .txt)\n- .csv files open in Excel automatically, but actually are plain text\n- Usually, columns are variables/measures and rows are observations (i.e. a person's measurements)\n\n### Data in R \n\n* We can import data from many file types, including .csv, .txt., and .xlsx\n    * We will cover this on a later date\n* Once imported, R typically stores data as __data frames__, or __tibbles__ if using the `tidyverse` package (more on this later).\n    * For our purposes, these are essentially the same, and I will tend to use the terms interchangeably.\n    * These are examples of what we call __object types__ in R.\n\n\n\n## Data frame example\n\n::: columns\n::: {.column width=\"54%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(\n  IDs=1:3, \n  gender=c(\"male\", \"female\", \"Male\"), \n  age=c(28, 35.5, 31),\n  trt = c(\"control\", \"1\", \"1\"),\n  Veteran = c(FALSE, TRUE, TRUE)\n  )\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  IDs gender  age     trt Veteran\n1   1   male 28.0 control   FALSE\n2   2 female 35.5       1    TRUE\n3   3   Male 31.0       1    TRUE\n```\n:::\n:::\n\n\n* __Vectors__ vs. __data frames__\n    * a data frame is a collection (or array or table) of vectors\n\n:::\n\n::: {.column width=\"2%\"}\n:::\n\n::: {.column width=\"44%\"}\n::: {style=\"font-size: 90%;\"}\n* Different columns can be of different data types (i.e. numeric vs. text)\n* Both numeric and text can be stored within a column (stored together as *text*).\n\n* Vectors and data frames are examples of _**objects**_ in R. \n  + There are other types of R objects to store data, such as matrices, lists.\n:::\n:::\n:::\n\n\n## Observations & variables\n\n::: columns\n::: {.column width=\"60%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  IDs gender  age     trt Veteran\n1   1   male 28.0 control   FALSE\n2   2 female 35.5       1    TRUE\n3   3   Male 31.0       1    TRUE\n```\n:::\n:::\n\n\n![[ISLBS](https://www.openintro.org/book/biostat/)](/img_slides/Fig1.8_variable_types.png){fig-align=\"center\"}\n\n:::\n::: {.column width=\"40%\"}\n::: {style=\"font-size: 90%;\"}\n* Book refers to a dataset as a _data matrix_ \n\n* Rows are usually __observations__\n* Columns are usually __variables__ \n\n\n* __[How many observations are in this dataset?]{style=\"color:green\"}__\n\n* __[What are the variable types in this dataset?]{style=\"color:green\"}__\n::: \n:::\n:::\n\n\n\n\n## Variable (column) types\n::: {style=\"font-size: 70%;\"}\nR type | variable type| description\n---|---|---\ninteger | discrete | integer-valued numbers\ndouble or numeric | continuous| numbers that are decimals\nfactor  | categorical | categorical variables stored with levels (groups)\ncharacter | categorical | text, \"strings\"\nlogical | categorical | boolean (TRUE, FALSE)\n\n<!-- Each variable (column) in a data frame can be of a different type. -->\n\n* View the __structure__ of our data frame to see what the variable types are:\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t3 obs. of  5 variables:\n $ IDs    : int  1 2 3\n $ gender : chr  \"male\" \"female\" \"Male\"\n $ age    : num  28 35.5 31\n $ trt    : chr  \"control\" \"1\" \"1\"\n $ Veteran: logi  FALSE TRUE TRUE\n```\n:::\n:::\n\n\n<!-- * Note that the ID column is _integer_ type since the values are all whole numbers, although we likely would think of it as being a categorical variable and thus prefer it to be a factor. -->\n\n\n\n\n## Fisher's (or Anderson's) Iris data set \n\nData description: \n\n* n = 150 \n* 3 species of Iris flowers (Setosa, Virginica, and Versicolour)\n  + 50 measurements of each type of Iris\n* __variables__:\n  + sepal length, sepal width, petal length, petal width, and species\n\n_[Can the iris species be determined by these variables?]{style=\"color:purple\"}_\n\n<center><img src=\"/img_slides/Iris_types.png\" width=\"70%\" height=\"50%\"><img src=\"/img_slides/Iris_parts.png\" width=\"28%\" height=\"50%\"></center>\n[Gareth Duffy](https://github.com/Datagatherer2357/Gareth-Duffy-GMIT-Project)\n\n\n\n## View the `iris` dataset\n\n::: {style=\"font-size: 80%;\"}\n* The `iris` dataset is already pre-loaded in *base* R and ready to use.\n* Type the following command in the console window\n  - _Warning: this command cannot be rendered. It will give an error._\n:::\n\n\\\n\n:::columns\n::: {.column width=\"30%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nView(iris)\n```\n:::\n\n::: {style=\"font-size: 80%;\"}\nA new tab in the scripting window should appear with the `iris` dataset.\n:::\n:::\n\n::: {.column width=\"70%\"}\n\n![](/img_slides/screenshot_iris_View.png){fig-align=\"center\"}\n:::\n:::\n\n\n## Data structure\n\n* What are the different __variable types__ in this data set?\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(iris)   # structure of data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n:::\n:::\n\n\n\n\n\n## Data set summary\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n:::\n:::\n\n\n\n\n## Data set info\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150   5\n```\n:::\n\n```{.r .cell-code}\nnrow(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150\n```\n:::\n\n```{.r .cell-code}\nncol(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nnames(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n```\n:::\n:::\n\n\n\n\n\n## View the beginning or end of a dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n:::\n\n```{.r .cell-code}\ntail(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n145          6.7         3.3          5.7         2.5 virginica\n146          6.7         3.0          5.2         2.3 virginica\n147          6.3         2.5          5.0         1.9 virginica\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n```\n:::\n:::\n\n\n\n\n## Specify how many rows to view at beginning or end of a dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(iris, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n```\n:::\n\n```{.r .cell-code}\ntail(iris, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n```\n:::\n:::\n\n\n\n\n## The `$`\n\n- Suppose we want to single out the column of petal width values.\n- One way to do this is to use the `$`\n    * `DatSetName$VariableName`\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris$Petal.Width\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 0.2 0.2 0.1 0.1 0.2 0.4 0.4 0.3\n [19] 0.3 0.3 0.2 0.4 0.2 0.5 0.2 0.2 0.4 0.2 0.2 0.2 0.2 0.4 0.1 0.2 0.2 0.2\n [37] 0.2 0.1 0.2 0.2 0.3 0.3 0.2 0.6 0.4 0.3 0.2 0.2 0.2 0.2 1.4 1.5 1.5 1.3\n [55] 1.5 1.3 1.6 1.0 1.3 1.4 1.0 1.5 1.0 1.4 1.3 1.4 1.5 1.0 1.5 1.1 1.8 1.3\n [73] 1.5 1.2 1.3 1.4 1.4 1.7 1.5 1.0 1.1 1.0 1.2 1.6 1.5 1.6 1.5 1.3 1.3 1.3\n [91] 1.2 1.4 1.2 1.0 1.3 1.2 1.3 1.3 1.1 1.3 2.5 1.9 2.1 1.8 2.2 2.1 1.7 1.8\n[109] 1.8 2.5 2.0 1.9 2.1 2.0 2.4 2.3 1.8 2.2 2.3 1.5 2.3 2.0 2.0 1.8 2.1 1.8\n[127] 1.8 1.8 2.1 1.6 1.9 2.0 2.2 1.5 1.4 2.3 2.4 1.8 1.8 2.1 2.4 2.3 1.9 2.3\n[145] 2.5 2.3 1.9 2.0 2.3 1.8\n```\n:::\n:::\n\n\n\n\n## Example using the `$`\n\nThe `$` is helpful if you want to create a new dataset for just that one variable, or, more commonly, if you want to calculate summary statistics for that one variable.\n\n\\\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(iris$Petal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.199333\n```\n:::\n\n```{.r .cell-code}\nsd(iris$Petal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7622377\n```\n:::\n\n```{.r .cell-code}\nmedian(iris$Petal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.3\n```\n:::\n:::\n\n\n\n\n## Inline code\n\n::: {style=\"font-size: 90%;\"}\n* With markdown you can also report __R code output inline__ with the text instead of using a chunk.\n\n::: columns\n::: {.column width=\"50%\"}\nText in editor:\n\n![](/img_slides/screenshot_code_inline_petalwidth.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\n\nOutput: \n\nThe mean petal width for all 3 species combined is 1.2 \n(SD = 0.8) cm.\n\n:::\n:::\n\n- Reporting summary statistics this way in a report, makes the numbers computationally reproducible.\n- For example, if this were for an abstract and a year later you are wondering where the numbers came from, your R code will tell you exactly which dataset was used to calculate the values.\n:::\n\n\n# (1.4) Summarizing numerical data \n\n::: columns\n::: {.column width=\"30%\"}\nMeasures of center &  spread\n\n:::\n\n::: {.column width=\"70%\"}\n\n![[https://xkcd.com/937/](https://xkcd.com/937/)](/img_slides/xkcd_tornadoguard.png){fig-align=\"center\"}\n\n:::\n:::\n\n\n\n## Table 1 example\n\n::: columns\n::: {.column width=\"60%\"}\n![](/img_slides/Table1_Barton.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"40%\"}\n*Are We on the Same Page?: A Cross-Sectional Study of Patient-Clinician Goal Concordance in Rheumatoid Arthritis*  \nJ Barton et al.  \nArthritis Care & Research.  \n2021 Sep 27\n[https://pubmed.ncbi.nlm.nih.gov/34569172/](https://pubmed.ncbi.nlm.nih.gov/34569172/) \n:::\n:::\n\n\n\n## Measures of center: mean\n\n::: {style=\"font-size: 80%;\"}\n__[Sample mean]{style=\"color:darkorange\"}__: the average value of observations\n\n$$\\overline{x} = \\frac{x_1+x_2+\\cdots+x_n}{n} = \\sum_{i=1}^{n}\\frac{x_i}{n}$$  \n\nwhere $x_1, x_2, \\ldots, x_n$ represent the $n$ observed values in a sample\n\n\n__Example__: What is the mean age in the toy dataset `df` defined earlier?\n:::\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  IDs gender  age     trt Veteran\n1   1   male 28.0 control   FALSE\n2   2 female 35.5       1    TRUE\n3   3   Male 31.0       1    TRUE\n```\n:::\n\n```{.r .cell-code}\nmean(df$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31.5\n```\n:::\n:::\n\n\n\n\n## Measures of center: median\n\n::: {style=\"font-size: 90%;\"}\n* The __[median]{style=\"color:darkorange\"}__ is the middle value of the observations in a sample.  \n\n* The median is the 50th percentile, meaning\n  - 50% of observations lie below and\n  - 50% of observations lie above the median.\n:::\n\n::: columns\n::: {.column width=\"50%\"}\n::: {style=\"font-size: 90%;\"}\n* If the number of observations is \n  - odd: the median is the middle observed value\n  - even: the median is the average of the two middle observed values\n:::\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$age\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 28.0 35.5 31.0\n```\n:::\n\n```{.r .cell-code}\nmedian(df$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31\n```\n:::\n\n```{.r .cell-code}\nmedian(c(df$age, 67))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 33.25\n```\n:::\n:::\n\n\n:::\n:::\n\n\n## Measures of center: mean vs. median\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02_Data_collection_num_summaries_files/figure-revealjs/unnamed-chunk-16-1.png){width=1344}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n:::\n:::\n\n\n\n## Measures of center: mode\n\n__[mode]{style=\"color:darkorange\"}__: the most frequent value in a dataset\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02_Data_collection_num_summaries_files/figure-revealjs/unnamed-chunk-18-1.png){width=1344}\n:::\n:::\n\n\n\n\n## Measures of spread: standard deviation (SD) (1/3) \n\n__standard deviation__ is (approximately) the average distance between a typical observation and the mean \n\n- An observation's **deviation** is the distance between its value $x$ and the sample mean $\\overline{x}$: deviation = $x - \\overline{x}$.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02_Data_collection_num_summaries_files/figure-revealjs/unnamed-chunk-19-1.png){width=1344}\n:::\n:::\n\n\n\n\n## Measures of spread: SD  (2/3) \n\n- The **sample variance** $s^2$ is the sum of squared deviations divided by the number of observations minus 1.\n$$s^2 = \\frac{(x_1 - \\overline{x})^2+(x_2 - \\overline{x})^2+\\cdots+(x_n - \\overline{x})^2}{n-1} = \\sum_{i=1}^{n}\\frac{(x_i - \\overline{x})^2}{n-1}$$\n    where $x_1, x_2, \\dots, x_n$ represent the $n$ observed values.\n\n- The **standard deviation** $s$ is the square root of the variance.\n$$s = \\sqrt{\\frac{({x_1 - \\overline{x})}^{2}+({x_2 - \\overline{x})}^{2}+\\cdots+({x_n - \\overline{x})}^{2}}{n-1}} = \\sqrt{\\sum_{i=1}^{n}\\frac{(x_i - \\overline{x})^2}{n-1}}$$\n\n\n\n\n## Measures of spread: SD  (3/3) \n\n::: columns\n::: {.column width=\"40%\"}\n\n::: {style=\"font-size: 80%;\"}\nLet's calculate the sample standard deviation for our toy example\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$age\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 28.0 35.5 31.0\n```\n:::\n:::\n\n\n:::\n\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(df$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31.5\n```\n:::\n\n```{.r .cell-code}\nsd(df$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.774917\n```\n:::\n:::\n\n\n:::\n:::\n\n$s = \\sqrt{\\sum_{i=1}^{n}\\frac{(x_i - \\overline{x})^2}{n-1}} =$\n\n<!-- \\sqrt{\\frac{({28 - 31.5)}^{2}+({35.5 - 31.5)}^{2}+({31 - 31.5)}^{2}}{3-1}} = 3.775 -->\n\n\n\n## Empirical Rule: one way to think about the SD (1/2) \n\n::: {style=\"font-size: 80%;\"}\n\n::: columns\n::: {.column width=\"40%\"}\nFor symmetric bell-shaped data, about\n\n* 68% of the data are within 1 SD of the mean\n* 95% of the data are within 2 SD's of the mean\n* 99.7% of the data are within 3 SD's of the mean\n\nThese percentages are based off of percentages of a true normal distribution.\n:::\n::: {.column width=\"60%\"}\n\n![[https://statistics-made-easy.com/empirical-rule/](https://statistics-made-easy.com/empirical-rule/)](/img_slides/empirical-rule.png){fig-align=\"center\" width=\"660\"}\n\n:::\n:::\n:::\n\n\n## Empirical Rule: one way to think about the SD (2/2)\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(iris$Sepal.Width)\n```\n\n::: {.cell-output-display}\n![](02_Data_collection_num_summaries_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(iris$Sepal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.057333\n```\n:::\n\n```{.r .cell-code}\nsd(iris$Sepal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.4358663\n```\n:::\n:::\n\n\n:::\n:::\n\n\n## Measures of spread: interquartile range (IQR) (1/2) \n\nThe $p^{th}$ percentile is the observation such that $p\\%$ of the remaining observations fall below this observation.\n\n  - The *first quartile* $Q_1$ is the $25^{th}$ percentile.\n  - The *second quartile* $Q_2$, i.e., the median, is the $50^{th}$ percentile.\n  - The *third quartile* $Q_3$ is the $75^{th}$ percentile.\n    \nThe __[interquartile range (IQR)]{style=\"color:darkorange\"}__ is the distance between the third and first quartiles.\n$$IQR = Q_3 - Q_1$$\n\n* IQR is the width of the *middle half* of the data\n\n\n\n## Measures of spread: IQR (2/2)\n\n__[5 number summary]{style=\"color:darkorange\"}__\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris$Sepal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.000   2.800   3.000   3.057   3.300   4.400 \n```\n:::\n:::\n\n\n::: columns\n::: {.column width=\"40%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](02_Data_collection_num_summaries_files/figure-revealjs/unnamed-chunk-25-1.png){width=480}\n:::\n:::\n\n\n:::\n\n::: {.column width=\"60%\"}\nWhat is the IQR of the sepal widths?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquantile(iris$Sepal.Width, c(.25, .75))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n25% 75% \n2.8 3.3 \n```\n:::\n\n```{.r .cell-code}\ndiff(quantile(iris$Sepal.Width, c(.25, .75)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n75% \n0.5 \n```\n:::\n\n```{.r .cell-code}\nIQR(iris$Sepal.Width)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5\n```\n:::\n:::\n\n\n:::\n:::\n\n\n## Robust estimates\n\nSummary statistics are called __[robust estimates]{style=\"color:darkorange\"}__ if extreme observations have little effect on their values\n\nestimate | robust? \n---| ---\nmean | \nmedian |\nmode |\nstandard deviaiton |\nIQR |\nrange |\n\n",
    "supporting": [
      "02_Data_collection_num_summaries_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}