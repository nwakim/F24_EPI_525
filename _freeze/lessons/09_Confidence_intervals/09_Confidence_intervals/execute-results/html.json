{
  "hash": "d94582ae723070f31a32e99cc73c3aad",
  "result": {
    "markdown": "---\ntitle: \"Day 9: Confidence intervals (4.2)\"\nauthor: \"Meike Niederhausen and Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#3070BF\"\ndate: \"09/25/2024\"\ncategories: [\"Week 6\"]\nformat: \n  revealjs:\n    theme: \"../simple_NW.scss\"\n    toc: true\n    toc-depth: 1\n    toc-title: Class Overview\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1600\n    height: 1100\n    footer: Lesson 8 Slides\n    html-math-method: mathjax\n    highlight-style: arrow\nexecute:\n  echo: true\n  freeze: auto\n---\n\n\n\n\n## Last time -> Goals for today\n\n::: columns\n::: {.column width=\"47%\"}\n### Day 8: Section 4.1\n* Sampling from a population\n  * population __parameters__ vs. __point estimates__\n  * sampling variation\n\n<br>\n\n* __Sampling distribution__ of a mean\n* __Central Limit Theorem__\n\n:::\n::: {.column width=\"4%\"}\n:::\n::: {.column width=\"47%\"}\n### Day 9: Section 4.2\n\nWhat are __Confidence Intervals__?\n\n* How to __calculate__ CI's?\n* How to __interpret__ & __NOT__ interpret CI's?\n\n<br>\n\n* What if we don't know $\\sigma$?\n* Student's __t-distribution__\n:::\n:::\n\n\n\n## Where are we?\n\n<br>\n<br>\n\n![](/img_slides/flowchart_511_continuous.png){fig-align=\"center\"}\n\n## Where are we? Continuous outcome zoomed in\n\n<br>\n<br>\n\n![](/img_slides/flowchart_only_continuous.jpg){fig-align=\"center\"}\n\n## Our hypothetical population: YRBSS\n\n__[Youth Risk Behavior Surveillance System](https://www.cdc.gov/healthyyouth/data/yrbs/index.htm) (YRBSS)__\n\n* Yearly survey conducted by the US Centers for Disease Control (CDC) \n* \"A set of surveys that track behaviors that can lead to poor health in students grades 9 through 12.\"[^1]\n* Dataset `yrbss` from `oibiostat` pacakge contains responses from _n_ = 13,583 participants in 2013 for a subset of the variables included in the complete survey data\n\n[^1]: Youth Risk Behavior Surveillance System [https://www.cdc.gov/healthyyouth/data/yrbs/index.htm](https://www.cdc.gov/healthyyouth/data/yrbs/index.htm) (YRBSS)\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(oibiostat)\ndata(\"yrbss\")  #load the data\n# ?yrbss\n```\n:::\n\n:::\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(yrbss)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 13583    13\n```\n:::\n:::\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(yrbss)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"age\"                      \"gender\"                  \n [3] \"grade\"                    \"hispanic\"                \n [5] \"race\"                     \"height\"                  \n [7] \"weight\"                   \"helmet.12m\"              \n [9] \"text.while.driving.30d\"   \"physically.active.7d\"    \n[11] \"hours.tv.per.school.day\"  \"strength.training.7d\"    \n[13] \"school.night.hours.sleep\"\n```\n:::\n:::\n\n\n\n## Transform height & weight from metric to to standard\n\nAlso, drop missing values and add a column of id values\n\n::: {.cell}\n\n```{.r .cell-code}\nyrbss2 <- yrbss %>%                 # save new dataset with new name\n  mutate(                           # add variables for \n    height.ft = 3.28084*height,     #     height in feet\n    weight.lb = 2.20462*weight      #     weight in pounds\n  ) %>% \n  drop_na(height.ft, weight.lb) %>% # drop rows w/ missing height/weight values\n  mutate(id = 1:nrow(.)) %>%        # add id column\n  select(id, height.ft, weight.lb)  # restrict dataset to columns of interest\n\nhead(yrbss2)  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  id height.ft weight.lb\n1  1  5.675853  186.0038\n2  2  5.249344  122.9957\n3  3  4.921260  102.9998\n4  4  5.150919  147.9961\n5  5  5.413386  289.9957\n6  6  6.167979  157.0130\n```\n:::\n\n```{.r .cell-code}\ndim(yrbss2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12579     3\n```\n:::\n\n```{.r .cell-code}\n# number of rows deleted that had missing values for height and/or weight:\nnrow(yrbss) - nrow(yrbss2) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1004\n```\n:::\n:::\n\n\n\n\n\n## `yrbss2`: stats for height in feet \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(yrbss2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id          height.ft       weight.lb     \n Min.   :    1   Min.   :4.167   Min.   : 66.01  \n 1st Qu.: 3146   1st Qu.:5.249   1st Qu.:124.01  \n Median : 6290   Median :5.512   Median :142.00  \n Mean   : 6290   Mean   :5.549   Mean   :149.71  \n 3rd Qu.: 9434   3rd Qu.:5.840   3rd Qu.:167.99  \n Max.   :12579   Max.   :6.923   Max.   :399.01  \n```\n:::\n\n```{.r .cell-code}\n(mean_height.ft <- mean(yrbss2$height.ft))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.548691\n```\n:::\n\n```{.r .cell-code}\n(sd_height.ft <- sd(yrbss2$height.ft))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3434949\n```\n:::\n:::\n\n\n\n\n\n## 10,000 samples of size n = 30 from `yrbss2`\n::: columns\n::: {.column width=\"50%\"}\nTake 10,000 random samples of size  \nn = 30 from `yrbss2`:\n\n::: {.cell}\n\n```{.r .cell-code}\nsamp_n30_rep10000 <- yrbss2 %>%\n  rep_sample_n(size = 30, \n               reps = 10000,\n               replace = FALSE)\nsamp_n30_rep10000\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 300,000 × 4\n# Groups:   replicate [10,000]\n   replicate    id height.ft weight.lb\n       <int> <int>     <dbl>     <dbl>\n 1         1  5869      5.15      145.\n 2         1  6694      5.41      127.\n 3         1  2517      5.74      130.\n 4         1  5372      6.07      180.\n 5         1  5403      6.07      163.\n 6         1  2329      6.07      182.\n 7         1  8863      5.25      125.\n 8         1  8058      5.84      135.\n 9         1   335      6.17      235.\n10         1  4698      5.58      124.\n# ℹ 299,990 more rows\n```\n:::\n:::\n\n\n:::\n::: {.column width=\"50\"}\nCalculate the mean for each of the 10,000 random samples:\n\n::: {.cell}\n\n```{.r .cell-code}\nmeans_hght_samp_n30_rep10000 <- \n  samp_n30_rep10000 %>% \n  group_by(replicate) %>% \n  summarise(mean_height = \n            mean(height.ft))\n\nmeans_hght_samp_n30_rep10000\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10,000 × 2\n   replicate mean_height\n       <int>       <dbl>\n 1         1        5.59\n 2         2        5.59\n 3         3        5.51\n 4         4        5.65\n 5         5        5.64\n 6         6        5.57\n 7         7        5.61\n 8         8        5.60\n 9         9        5.52\n10        10        5.64\n# ℹ 9,990 more rows\n```\n:::\n:::\n\n:::\n:::\n\n[How close are the mean heights for each of the 10,000 random samples?]{style=\"color:purple\"}\n\n\n\n\n## Simulated sampling distribution for n = 30 <br> using 10,000 sample mean heights\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(\n  means_hght_samp_n30_rep10000, \n  aes(x = mean_height)) + \n  geom_histogram() +\n  labs(title = \"Simulated \\n sampling distribution\")\n```\n\n::: {.cell-output-display}\n![](09_Confidence_intervals_files/figure-revealjs/unnamed-chunk-9-1.png){width=480}\n:::\n:::\n\n\n:::\n::: {.column width=\"50%\"}\n\nCLT tells us that we can model the sampling distribution of mean heights using a normal distribution.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](09_Confidence_intervals_files/figure-revealjs/unnamed-chunk-10-1.png){width=576}\n:::\n:::\n\n\n:::\n:::\n\n\n\n\n## Given $\\bar{x}$, what are plausible values of $\\mu$?\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](09_Confidence_intervals_files/figure-revealjs/unnamed-chunk-11-1.png){width=1152}\n:::\n:::\n\n\n\n## Confidence interval (C I) for the mean $\\mu$\n\n::: columns\n::: {.column width=\"40%\"}\n$$\\overline{x}\\ \\pm\\ z^*\\times \\text{SE}$$\n\nwhere \n\n* $SE = \\frac{\\sigma}{\\sqrt{n}}$\n:::\n::: {.column width=\"60%\"}\n![](/img_slides/choosingZForCI.jpg){fig-align=\"center\"}\n:::\n:::\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n* $z^*$ depends on the confidence level\n  * For a 95% CI, $z^*$ is chosen such that 95% of the standard normal curve is between $-z^*$ and $z^*$\n:::\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nqnorm(.975)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.959964\n```\n:::\n\n```{.r .cell-code}\nqnorm(.995)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.575829\n```\n:::\n:::\n\n:::\n:::\n\n[When can this be applied?]{style=\"color:green\"}\n\n\n\n## Example: C I for mean height\n\n* A random sample of 30 high schoolers has mean height 5.6 ft. \n* Find the 95% confidence interval for the population mean, assuming that the population standard deviation is 0.34 ft. \n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n## How to interpret a C I? (1/2)\n\n::: columns\n::: {.column width=\"80%\"}\nSimulating Confidence Intervals:  \n\n::: {style=\"font-size: 90%;\"}\n[http://www.rossmanchance.com/applets/ConfSim.html](http://www.rossmanchance.com/applets/ConfSim.html)\n:::\n\nThe figure shows CI's from 100 simulations.\n\n* The true value of $\\mu$ = 5.55 is the vertical black line.\n* The horizontal lines are 95% CI's from 100 samples. \n    * [__Green__]{style=\"color:green\"}: the CI “captured” the true value of $\\mu$\n    * [__Red__]{style=\"color:red\"}: the CI _did not_ “capture” the true value of $\\mu$\n\n<br>\n\n### Question:  \n\n__What percent of CI's captured the true value of__ $\\mu$ __?__ \n:::\n::: {.column width=\"20%\"}\n\n![](/img_slides/simulating_CI_z_with_sigma_95_RossmanChance_onlyCIs.png){fig-align=\"center\" height=70%}\n:::\n:::\n\n\n\n\n## How to interpret a C I? (2/2)\n\n[Actual interpretation:]{style=\"color:darkorange\"}\n\n* If we were to \n    * __repeatedly take random samples__ from a population and\n    * calculate a 95% CI for each random sample,\n* then we would __expect 95% of our CI's to contain the true population parameter__ $\\mu$.\n\n<!-- \"Real life\": -->\n\n<!-- * We typically only take 1 random sample.   -->\n<!-- * How do we know if our CI is a lucky or unlucky one? -->\n\n[What we typically write as \"shorthand\":]{style=\"color:darkorange\"}\n\n* We are 95% _confident_  that (the 95% confidence interval) captures the value of the population parameter.\n\n[WRONG interpretation:]{style=\"color:red\"}\n\n* There is a 95% _chance_  that (the 95% confidence interval) captures the value of the population parameter.\n    * For one CI on its own, it either does or doesn't contain the population parameter with probability 0 or 1. We just don't know which!\n\n\n\n## What percent C I was being simulated in this figure?\n\n::: columns\n::: {.column width=\"20%\"}\n![](/img_slides/simulating_CI_z_with_sigma_85_RossmanChance_onlyCIs.png){fig-align=\"center\"}\n:::\n::: {.column width=\"80%\"}\n100 CI's are shown in the figure.\n:::\n:::\n\n\n## Interpretation of the mean heights C I\n\n\nCorrect interpretation:\n\n* We are 95% _confident_ that the mean height for high schoolers is between 5.43 and 5.67 feet.\n\n[*WRONG:*]{style=\"color:red\"}\n\n* There is a 95% _chance_ that the mean height for high schoolers is between 5.43 and 5.67 feet.\n\n\n## What if we don't know $\\sigma$ ? (1/3)\n\nSimulating Confidence Intervals: [http://www.rossmanchance.com/applets/ConfSim.html](http://www.rossmanchance.com/applets/ConfSim.html)\n\n![](/img_slides/simulating_CI_RossmanChance.png){fig-align=\"center\"}\n\n*The normal distribution doesn't have a 95% \"coverage rate\"  \nwhen using $s$ instead of $\\sigma$ *\n\n\n\n\n## What if we don't know $\\sigma$ ? (2/3)\n\n* In real life, we don't know what the population sd is ( $\\sigma$ )\n\n* If we replace $\\sigma$ with $s$ in the SE formula, we add in additional variability to the SE!\n$$\\frac{\\sigma}{\\sqrt{n}} ~~~~\\textrm{vs.} ~~~~ \\frac{s}{\\sqrt{n}}$$\n\n\n    \n* Thus when using $s$ instead of $\\sigma$ when calculating the SE, we __need a different probability distribution__ with thicker tails than the normal distribution.\n\n    * [In practice this will mean using a different value than 1.96 when calculating the CI.]{style=\"color:green\"}\n\n\n## What if we don't know $\\sigma$ ? (3/3)\n\n::: columns\n::: {.column width=\"50%\"}\nThe __Student’s t-distribution__:\n\n* Is bell shaped and symmetric with mean = 0.\n* Its tails are a thicker than that of a normal distribution\n    * The \"thickness\" depends on its __degrees of freedom__: $df = n–1$ , where n = sample size.\n* As the degrees of freedom (sample size) increase, \n    * the tails are less thick, and \n    * the t-distribution is more like a normal distribution\n    * in theory, with an infinite sample size the _t_-distribution is a normal distribution.\n:::\n::: {.column width=\"50%\"}\n<br>\n<br>\n\n![](/img_slides/t_dist.png){fig-align=\"center\"}\n:::\n:::\n\n\n## Calculating the C I for the population mean using $s$\n\n\nCI for $\\mu$:\n\n$$\\bar{x} \\pm t^*\\cdot\\frac{s}{\\sqrt{n}}$$\n\nwhere $t^*$ is determined by the t-distribution and dependent on the  \n__df =__ $n-1$ and the confidence level\n\n::: columns\n::: {.column width=\"60%\"}\n\n* `qt` gives the quartiles for a t-distribution. Need to specify \n    * the percent under the curve to the left of the quartile \n    * the degrees of freedom = n-1\n\n* Note in the R output to the right that $t^*$ gets closer to 1.96 as the sample size increases.\n:::\n\n::: {.column width=\"40%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nqt(.975, df=9)  # df = n-1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.262157\n```\n:::\n\n```{.r .cell-code}\nqt(.975, df=49)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.009575\n```\n:::\n\n```{.r .cell-code}\nqt(.975, df=99)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.984217\n```\n:::\n\n```{.r .cell-code}\nqt(.975, df=999)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.962341\n```\n:::\n:::\n\n:::\n:::\n\n\n\n## Using a $t$-table to get $t^*$\n::: columns\n::: {.column width=\"50%\"}\n![](/img_slides/t-table_appendix_part1.png){fig-align=\"center\"}\n:::\n::: {.column width=\"50%\"}\n![](/img_slides/t-table_appendix_part2.png){fig-align=\"center\"}\n:::\n:::\n\n## Example: C I for mean height (revisited)\n\n* A random sample of 30 high schoolers has mean height 5.6 ft and standard deviation 0.34 ft. \n* Find the 95% confidence interval for the population mean. \n\n\n## $z$ vs $t$?? <br> ([& important comment about Chapter 4 of textbook]{style=\"color:green\"})\n\n\n::: columns\n::: {.column width=\"43%\"}\n__Textbook's rule of thumb__\n\n::: {style=\"font-size: 90%;\"}\n* (Ch 4) If $n \\geq 30$ and population distribution not strongly skewed:\n    * __Use normal distribution__\n    * __No matter if using $\\sigma$ or $s$ for the $SE$__\n    * If there is skew or some large outliers, then need  $n \\geq 50$\n* (Ch 5) If $n < 30$ and data approximately symmetric with no large outliers:\n    * Use Student's t-distribution\n:::\n\n:::\n::: {.column width=\"2%\"}\n:::\n::: {.column width=\"55%\"}\n__BSTA 511 rule of thumb__\n\n* Use [normal distribution ONLY if know $\\sigma$]{style=\"color:darkorange\"}\n    * If [using $s$ for the $SE$, then use the Student's t-distribution]{style=\"color:purple\"}\n\nFor either case, can apply if either\n\n* $n \\geq 30$ and population distribution not strongly skewed\n    * If there is skew or some large outliers, then $n \\geq 50$ gives better estimates\n* $n < 30$ and data approximately symmetric with no large outliers\n\n_If do not know population distribution, then check the distribution of the data._\n:::\n:::\n",
    "supporting": [
      "09_Confidence_intervals_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}