{
  "hash": "f6a4795f2bb53a71760ed54c8f05774b",
  "result": {
    "markdown": "---\ntitle: \"Untitled\"\neditor: visual\n---\n\n\n# Case study\n\n## Case Study Description\n\n-   In the US, individuals with developmental disabilities typically receive services and support from state governments.\n\n    -   California allocates funds to developmentally disabled residents through the *Department of Developmental Services (DDS)*\n    -   Recipients of DDS funds are referred to as \"consumers.\"\n\n \n\n-   Dataset `dds.discr`\n\n    -   Sample of 1,000 DDS consumers (out of a total of \\~ 250,000)\n    -   Data include [age, sex assigned at birth, race/ethnicity, and annual DDS financial support per consumer]{style=\"color:#C83532\"}\n\n \n\n-   For now, we are going to explore these data with `R`\n\n-   See Section 1.7.1 in the textbook for more details\n\n## Load `dds.discr` dataset from `oibiostat` package\n\n-   The textbook's datasets are in the R package `oibiostat`\n\n-   Make sure the `oibiostat` package is installed before running the code below.\n\n-   Load the `oibiostat` package and the dataset `dds.discr`\n\n \n\n[**The code below needs to be run *every time* you restart R or render a Qmd file:**]{style=\"color:#BF396F\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(oibiostat)\ndata(\"dds.discr\")\n```\n:::\n\n\n \n\n-   After loading the dataset `dds.discr` using `data(\"dds.discr\")`, you will see `dds.discr` in the Data list of the Environment window.\n\n## `glimpse()`\n\n-   We previously used the base R structure command `str()` to get information about variable types in a dataset (in R03: R basics part 2)\n-   Use `glimpse()` from the `tidyverse` package (technically it's from the `dplyr` package) to get information about variable types.\n-   `glimpse()` tends to have nicer output for `tibbles` than `str()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nglimpse(dds.discr)  # from tidyverse package (dplyr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ gender       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ ethnicity    <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n## Some things to note on this dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dds.discr)  # from tidyverse package (dplyr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ gender       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ ethnicity    <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n-   This happens in older datasets (and honestly some newer ones): gender and sex get conflated\n    -   I try to catch these issues before sharing datasets with you, but when we load datasets directly from the `oibiostat` package, I can't make these changes\n    -   If you are unfamiliar with the differences, please see [this NIH site on sex and gender](https://orwh.od.nih.gov/sex-gender)\n-   Also, race and ethnicity can be mislabeled\n    -   \"White not hispanic\" combines race and ethnicity\n    -   If you are unfamiliar with the differences, please see [this APA site on race and ethnicity](https://www.apa.org/topics/race-ethnicity)\n\n## `rename()`: one of the first things I usually do\n\n-   I want to rename the variable, gender, to sex and rename ethnicity to r_e (race and ethnicity)\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr1 = dds.discr %>% \n  rename(sex_MF = gender, \n         r_e = ethnicity)\n\nglimpse(dds.discr1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ sex_MF       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ r_e          <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n## Histograms\n\nWhat is being measured on the vertical axes?\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = dds.discr1, \n       aes(x = expenditures)) +\n  geom_histogram() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n:::\n:::::\n\n## Histograms showing proportions\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram(\n    aes(y = stat(density)))  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `stat(density)` was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-6\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram(\n    aes(y = stat(density))) +  \n  scale_y_continuous(labels =   \n      scales::percent_format())  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n:::\n:::::\n\n## Density plots {visibility=\"hidden\"}\n\nWhat is being measured on the vertical axes?\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_density() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n:::\n:::::\n\n## Boxplots\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = dds.discr1, \n       aes(x = age)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-11-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = dds.discr1, \n       aes(y = age)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-12-1.png){width=480}\n:::\n:::\n\n:::\n:::::\n\n# Categorical data\n\n## Barplots\n\n::::: columns\n::: {.column width=\"50%\"}\nCounts (below) vs.\\\npercentages (right)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, \n       aes(x = r_e)) +\n  geom_bar() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-13-1.png){width=576}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-6\"}\nggplot(data = dds.discr1, \n       aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop),  \n               group = 1)) + \n  scale_y_continuous(labels =  \n      scales::percent_format())  \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-14-1.png){width=576}\n:::\n:::\n\n:::\n:::::\n\n## Adding more to plots!\n\nTilt text so we can read it!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop), group = 1)) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-15-1.png){width=1344}\n:::\n:::\n\n\n## Adding more to plots!\n\nWe can change labels!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-5\"}\nggplot(data = dds.discr1, aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop), group = 1)) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(x = \"Race and ethnicity\", y = \"Proportion\", \n       title = \"Proportion of individuals receiving DDS by race and ethnicity\")\n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-16-1.png){width=1344}\n:::\n:::\n\n\n## Adding more to plots!\n\nIncrease text size so we can read it!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-5\"}\nggplot(data = dds.discr1, aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop), group = 1)) +\n  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 35),\n        axis.title = element_text(size = 35))\n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-17-1.png){width=1344}\n:::\n:::\n\n\n# Meike's notes\n\n## Getting to know the dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(dds.discr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1000    6\n```\n:::\n\n```{.r .cell-code}\nnames(dds.discr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"id\"           \"age.cohort\"   \"age\"          \"gender\"       \"expenditures\"\n[6] \"ethnicity\"   \n```\n:::\n\n```{.r .cell-code}\nlength(unique(dds.discr$id)) # How many unique id's are there?\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1000\n```\n:::\n:::\n\n\n## `str()` structure\n\n::: {style=\"font-size: 80%;\"}\n-   We previously used the base R structure command `str()` to get information about variable types in a dataset.\n-   Note this dataset is a `tibble` instead of a `data.frame`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(dds.discr)      # base R\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [1,000 × 6] (S3: tbl_df/tbl/data.frame)\n $ id          : int [1:1000] 10210 10409 10486 10538 10568 10690 10711 10778 10820 10823 ...\n $ age.cohort  : Factor w/ 6 levels \"0-5\",\"6-12\",\"13-17\",..: 3 5 1 4 3 3 3 3 3 3 ...\n $ age         : int [1:1000] 17 37 3 19 13 15 13 17 14 13 ...\n $ gender      : Factor w/ 2 levels \"Female\",\"Male\": 1 2 2 1 2 1 1 2 1 2 ...\n $ expenditures: int [1:1000] 2113 41924 1454 6400 4412 4566 3915 3873 5021 2887 ...\n $ ethnicity   : Factor w/ 8 levels \"American Indian\",..: 8 8 4 4 8 4 8 3 8 4 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = col_integer(),\n  ..   `Age Cohort` = col_character(),\n  ..   Age = col_integer(),\n  ..   Gender = col_character(),\n  ..   Expenditures = col_integer(),\n  ..   Ethnicity = col_character()\n  .. )\n```\n:::\n:::\n\n\n<!-- ![](../img_slides/dds.discr_str.png){fig-align=\"center\"} -->\n\n## `glimpse()`\n\n::: {style=\"font-size: 80%;\"}\n**New: `glimpse()`**\n\n-   Use `glimpse()` from the `tidyverse` package (technically it's from the `dplyr` package) to get information about variable types.\n-   `glimpse()` tends to have nicer output for `tibbles` than `str()`\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nglimpse(dds.discr)  # from tidyverse package (dplyr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ gender       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ ethnicity    <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n<!-- ![](../img_slides/dds.discr_glimpse.png){fig-align=\"center\"} -->\n\n## `summary()`\n\n::: {style=\"font-size: 80%;\"}\n-   We previously used the base R structure command `summary()` to get summary information about variables\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(dds.discr)      # base R\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       id        age.cohort       age          gender     expenditures  \n Min.   :10210   0-5  : 82   Min.   : 0.0   Female:503   Min.   :  222  \n 1st Qu.:31809   6-12 :175   1st Qu.:12.0   Male  :497   1st Qu.: 2899  \n Median :55384   13-17:212   Median :18.0                Median : 7026  \n Mean   :54663   18-21:199   Mean   :22.8                Mean   :18066  \n 3rd Qu.:76135   22-50:226   3rd Qu.:26.0                3rd Qu.:37713  \n Max.   :99898   51+  :106   Max.   :95.0                Max.   :75098  \n                                                                        \n              ethnicity  \n White not Hispanic:401  \n Hispanic          :376  \n Asian             :129  \n Black             : 59  \n Multi Race        : 26  \n American Indian   :  4  \n (Other)           :  5  \n```\n:::\n:::\n\n\n## `tbl_summary()`: summary table\n\n:::::: columns\n:::: {.column width=\"50%\"}\n::: {style=\"font-size: 80%;\"}\n-   **New:** Use `tbl_summary()` from the `gtsummary` package to get summary information\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(gtsummary)\ntbl_summary(dds.discr)\n```\n:::\n\n::::\n\n::: {.column width=\"50%\"}\n![](../img_slides/dds.discr_gtsummary.jpg){fig-align=\"center\" height=\"650\"}\n:::\n::::::\n\n# Visualize numerical variables with `ggplot`\n\n::::: columns\n::: {.column width=\"40%\"}\n![[ggplot](https://ggplot2.tidyverse.org/index.html)](../img_slides/ggplotlogo.png){fig-align=\"center\" height=\"400\"}\n:::\n\n::: {.column width=\"60%\"}\n![[Artwork by \\@allison_horst](https://allisonhorst.com/)](../img_slides/ggplot2_masterpiece.png){fig-align=\"center\" height=\"400\"}\n:::\n:::::\n\n## What data (variables) are included in the plot below?\n\n![](../img_slides/ggplot_basics_from_ppt_figure_only.png){fig-align=\"center\"}\n\n## Basics of a ggplot\n\n![](../img_slides/ggplot_basics_from_ppt.png){fig-align=\"center\"}\n\n## Grammar of ggplot2\n\n![[Kieran Healy](https://github.com/rstudio-conf-2020/dataviz)](../img_slides/khealy_ggplot1.png){fig-align=\"center\"}\n\n## Histograms\n\nWhat is being measured on the vertical axes?\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = dds.discr, \n       aes(x = age)) +\n  geom_histogram() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = dds.discr, \n       aes(x = expenditures)) +\n  geom_histogram() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n:::\n:::::\n\n## Histograms showing proportions\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = dds.discr, \n       aes(x = age)) +\n  geom_histogram(\n    aes(y = stat(density)))  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-6\"}\nggplot(data = dds.discr, \n       aes(x = age)) +\n  geom_histogram(\n    aes(y = stat(density))) +  \n  scale_y_continuous(labels =   \n      scales::percent_format())  \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n:::\n:::::\n\n## Distribution shapes\n\n![](../img_slides/distribution_shapes.png){fig-align=\"center\"}\n\n## Density plots\n\nWhat is being measured on the vertical axes?\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr, \n       aes(x = age)) +\n  geom_density() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr, \n       aes(x = age)) +\n  geom_histogram() \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n:::\n:::::\n\n## Dot plots\n\n::: {style=\"font-size: 80%;\"}\n-   Better for smaller samples\n-   What is being measured on the vertical axes?\n:::\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr, \n       aes(x = age)) +\n  geom_dotplot(binwidth =1) \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr, \n       aes(x = age)) +\n  geom_histogram(binwidth =1) \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n:::\n:::::\n\n## Boxplots\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = dds.discr, \n       aes(x = age)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-31-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = dds.discr, \n       aes(y = age)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_case_study_files/figure-html/unnamed-chunk-32-1.png){width=480}\n:::\n:::\n\n:::\n:::::\n\n## Boxplots: 5 number summary visualization\n\n<!-- ![](../img_slides/boxplot_no_outliers.png) -->\n\nNo outliers: ![https://www.simplypsychology.org/boxplots.html](../img_slides/boxplot_no_outliers.png){fig-align=\"center\" height=\"280\"}\n\nWith outliers: ![https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51](../img_slides/boxplot_w_outliers.png){fig-align=\"center\" height=\"300\"}\n",
    "supporting": [
      "07_Data_visualization_case_study_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}