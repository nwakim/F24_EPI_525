{
  "hash": "c6e91986baf3e093da23b453ea0a1be8",
  "result": {
    "markdown": "---\ntitle: \"Lesson 7: Data visualization of a single variable\"\nauthor: \"Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#3070BF\"\ndate: \"10/21/2024\"\nformat: \n  revealjs:\n    theme: \"../simple_NW.scss\"\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1955\n    height: 1100\n    footer: Lesson 7 Slides\n    html-math-method: mathjax\n    highlight-style: arrow\nexecute:\n  echo: true\n  freeze: auto\n---\n\n\n\n\n# Learning Objectives\n\n1.  Visualize distributions of numeric data/variables using histograms and boxplots\n\n2.  Recognize when transforming data helps make asymmetric data more symmetric (log values)\n\n3.  Visualize distributions of categorical data/variables using frequency tables and barplots\n\n## Where are we?\n\n![](../img_slides/course_map.png){fig-align=\"center\"}\n\n## \n\n![Artwork by \\@allison_horst](../img_slides/debugging.png){fig-alt=\"A cartoon of a fuzzy round monster face showing 10 different emotions experienced during the process of debugging code. The progression goes from (1) “I got this” - looking determined and optimistic; (2) “Huh. Really thought that was it.” - looking a bit baffled; (3) “...” - looking up at the ceiling in thought; (4) “Fine. Restarting.” - looking a bit annoyed; (5) “OH WTF.” Looking very frazzled and frustrated; (6) “Zombie meltdown.” - looking like a full meltdown; (7) (blank) - sleeping; (8) “A NEW HOPE!” - a happy looking monster with a lightbulb above; (9) “insert awesome theme song” - looking determined and typing away; (10) “I love coding” - arms raised in victory with a big smile, with confetti falling.\"}\n\n## Why do we bother with visualizing data?[^1]\n\n[^1]: Adapted from my Google search AI results: <https://www.google.com/search?q=why+do+statistics+bother+with+data+visualization&rlz=1C5GCEM_enUS1130&oq=why+do+statistics+bother+with+data+visu&gs_lcrp=EgZjaHJvbWUqBwgBECEYoAEyBggAEEUYOTIHCAEQIRigATIHCAIQIRigATIHCAMQIRirAtIBCDk3NDBqMGo0qAIAsAIB&sourceid=chrome&ie=UTF-8>\n\n-   **Makes data easier to understand**\n\n    -   helps you understand large amounts of data by turning it into a visual context, such as a graph or map\n\n-   **Helps identify patterns**\n\n    -   helps identify patterns, trends, and outliers in data sets. \n\n-   **Reveals data features**\n\n    -   reveals data features that statistics and models might miss, such as unusual distributions, gaps, and outliers\n\n-   **Helps with decision-making**\n\n    -   helps with decision-making on analysis plans\n\n## From Lesson 2: Example: the frog study[^2]\n\n[^2]: <https://www.cdc.gov/nchs/products/databriefs/db220.htm>\n\nIn evolutionary biology, parental investment refers to the amount of time, energy, or other resources devoted towards raising offspring.\n\n \n\nWe will be working with the `frog` dataset, which originates from a 2013 study[^3] about maternal investment in a frog species. Reproduction is a costly process for female frogs, necessitating a trade-off between individual egg size and total number of eggs produced.\n\n[^3]: Chen, W., et al. Maternal investment increases with altitude in a frog on the Tibetan Plateau. Journal of evolutionary biology 26.12 (2013): 2710-2715.\n\n    ## \n\n \n\nResearchers were interested in investigating how maternal investment varies with altitude. They collected measurements on egg clutches found at breeding ponds across 11 study sites; for 5 sites, the body size of individual female frogs was also recorded.\n\n \n\n \n\n## From Lesson 2: Four rows from frog data frame\n\n\\captionsetup[table]{labelformat=empty}\n\n+---------+----------+----------+----------+-------------+---------------+-----------+\n|         | altitude | latitude | egg.size | clutch.size | clutch.volume | body.size |\n+=========+==========+==========+==========+=============+===============+===========+\n| 1       | 3,462.00 | 34.82    | 1.95     | 181.97      | 177.83        | 3.63      |\n+---------+----------+----------+----------+-------------+---------------+-----------+\n| 2       | 3,462.00 | 34.82    | 1.95     | 269.15      | 257.04        | 3.63      |\n+---------+----------+----------+----------+-------------+---------------+-----------+\n| 3       | 3,462.00 | 34.82    | 1.95     | 158.49      | 151.36        | 3.72      |\n+---------+----------+----------+----------+-------------+---------------+-----------+\n| 150     | 2,597.00 | 34.05    | 2.24     | 537.03      | 776.25        | NA        |\n+---------+----------+----------+----------+-------------+---------------+-----------+\n\n \n\n-   Each **row** is an [**observation**]{style=\"color:#BF396F;\"}\n-   Each **column** is a [**variable**]{style=\"color:#459B99;\"}\n-   All the [**observations**]{style=\"color:#BF396F;\"} and [**variables**]{style=\"color:#459B99;\"} together make a [**data frame**]{style=\"color:#8043F3;\"} (sometimes called data matrix)\n\n \n\n-   **Missing values:** `NA` means the measured value for body size in clutch #150 is missing\n\n## From Lesson 2: Exploring data initially\n\n-   Techniques for exploring and summarizing data **differ** for [**numerical**]{style=\"color:#E75B5C;\"} versus [**categorical**]{style=\"color:#EF85B3;\"} variables.\n\n \n\n-   Numerical and graphical summaries are useful for examining variables one at a time\n    -   Can also be used for exploring the relationships between variables\n    -   *Numerical* summaries are not just for [**numerical**]{style=\"color:#E75B5C;\"} variables (certain ones are used for [**categorical**]{style=\"color:#EF85B3;\"} variables)\n\n \n\n-   Today we we look at ways to **visualize** a [**numerical**]{style=\"color:#E75B5C;\"} variable and a [**categorical**]{style=\"color:#EF85B3;\"} variable\n\n# Learning Objectives\n\n::: lob\n1.  Visualize distributions of numeric data/variables using histograms and boxplots\n:::\n\n2.  Recognize when transforming data helps make asymmetric data more symmetric (log values)\n\n3.  Visualize distributions of categorical data/variables using frequency tables and barplots\n\n## Histograms\n\n::::: columns\n::: {.column width=\"45%\"}\n-   Histograms show the counts of observations (y-axis) that have values within a specific interval for a specific variable (x-axis)\n-   Show the shape of the distribution and data density\n-   Distribution is considered **symmetric** if the trailing parts of the plot are roughly equal\n-   Distribution is considered **asymmetric** if one tail trails off more than the other (as we see with clutch volume)\n-   Asymmetric distributions are said to be skewed\n    -   **Skewed right** if trails off to right\n    -   **Skewed left** if trails off to the left\n:::\n\n::: {.column width=\"55%\"}\n![](../img_slides/frog_hist.png){fig-align=\"center\" fig-width=\"400\" width=\"1000\"}\n:::\n:::::\n\n## Histograms\n\n-   Mode is represented by the tallest peak in the distribution\n-   When data have one prominent peak, we call it unimodel\n-   If there is more than one relative peak, we call it multimodel\n\n![](../img_slides/dist_1.19.png)\n\n## Histograms\n\nWe can make a histogram of clutch volume or clutch size:\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = frog, \n       aes(x = clutch.volume)) +\n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = frog, \n       aes(x = clutch.size)) +\n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n:::\n:::::\n\n## Poll Everywhere Question 1\n\n## Boxplots\n\n::::: columns\n::: {.column width=\"43%\"}\n-   A **boxplot** indicates the positions of the first, second, and third quartiles of a distribution in addition to extreme observations\n-   Interquartile range (IQR) represented by rectangle with black line through it for the median\n-   Whiskers extend from the box to capture data that are between $Q_1$ and $Q_1 - 1.5 IQR$ and separately between $Q_3$ and $Q_3 + 1.5 IQR$\n-   An **outlier** is a value that appears extreme relative to the rest of the data\n    -   It is more than $1.5IQR$ away from $Q_1$ and $Q_3$\n:::\n\n::: {.column width=\"57%\"}\n![](../img_slides/boxplot_CV.png){width=\"1100\"}\n:::\n:::::\n\n## Boxplots\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = frog, \n       aes(x = clutch.volume)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-4-1.png){width=576}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = frog, \n       aes(y = clutch.volume)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-5-1.png){width=480}\n:::\n:::\n\n:::\n:::::\n\n# Learning Objectives\n\n1.  Visualize distributions of numeric data/variables using histograms and boxplots\n\n::: lob\n2.  Recognize when transforming data helps make asymmetric data more symmetric (log values)\n:::\n\n3.  Visualize distributions of categorical data/variables using frequency tables and barplots\n\n## We may want to transform data\n\n-   When working with strongly skewed data, it can be useful to apply a transformation\n\n-   Common to use the **natural log transformation** on skewed data\n\n    -   We typically just call this the \"log transformation\"\n\n    -   Especially for variables with many values clustered near 0 and other observations that are positive\n\n-   Transformations are mostly used when we make certain assumptions about the distribution of our data\n\n    -   For a lot of statistics methods, we assume the data is distributed normally\n    -   So we may need to transform the data to make it normal!\n\n## Let's transform clutch volume!\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = frog, \n       aes(x = clutch.volume)) +\n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = frog, \n       aes(x = log(clutch.volume))) +\n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n:::\n:::::\n\n## Poll everywhere question 2\n\n# Learning Objectives\n\n1.  Visualize distributions of numeric data/variables using histograms and boxplots\n\n2.  Recognize when transforming data helps make asymmetric data more symmetric (log values)\n\n::: lob\n3.  Visualize distributions of categorical data/variables using frequency tables and barplots\n:::\n\n## From Lesson 4: Example: hypertension prevalence (1/2)\n\n-   US CDC estimated that between 2011 and 2014[^4], 29% of the population in America had hypertension\n\n[^4]: <https://www.cdc.gov/nchs/products/databriefs/db220.htm>\n\n \n\n-   A health care practitioner seeing a new patient would expect a 29% chance that the patient might have hypertension\n    -   However, this is **only the case if nothing else is known about the patient**\n\n## From Lesson 4: Example: hypertension prevalence\n\n-   Prevalence of **hypertension varies significantly with age**\n    -   Among adults aged 18-39, 7.3% have hypertension\n    -   Adults aged 40-59, 32.2%\n    -   Adults aged 60 or older, 64.9% have hypertension\n\n \n\n-   Knowing the age of a patient provides important information about the likelihood of hypertension\n\n    -   Age and hypertension status are **not independent** (we will get into this)\n\n-   While the probability of hypertension of a randomly chosen adult is 0.29...\n\n    -   The **conditional probability** of hypertension in a person known to be 60 or older is 0.649\n\n \n\n## From Lesson 4: Contingency tables\n\n-   We can start looking at the **contingency table** for hypertension for different age groups\n    -   **Contingency table:** type of data table that displays the frequency distribution of two or more categorical variables\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table: Contingency table showing hypertension status and age group, in\nthousands.\n\n|Age Group             | Hypertension| No Hypertension|  Total|\n|:---------------------|------------:|---------------:|------:|\n|18-39 years           |         8836|          112206| 121042|\n|40 to 59 years        |        42109|           88663| 130772|\n|Greater than 60 years |        39917|           21589|  61506|\n|Total                 |        90862|          222458| 313320|\n:::\n:::\n\n\n## Let's look at each variable separately\n\n-   The label \"contingency tables\" are usually reserved for when we have two variables in one table\n-   When we have one variable, we often call these **frequency tables**\n    -   Shows the count of observations that fall into a specific category\n-   In a **relative frequency table**, proportions for each category is shown instead of counts\n\n::::: columns\n::: column\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Frequency table for age group variable\n\n|Age Group             |  Count|\n|:---------------------|------:|\n|18-39 years           | 121042|\n|40 to 59 years        | 130772|\n|Greater than 60 years |  61506|\n|Total                 | 313320|\n:::\n:::\n\n:::\n\n::: column\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Relative frequency table for age group variable\n\n|Age Group             |  Count|\n|:---------------------|------:|\n|18-39 years           | 0.3863|\n|40 to 59 years        | 0.4174|\n|Greater than 60 years | 0.1963|\n|Total                 | 1.0000|\n:::\n:::\n\n:::\n:::::\n\n## Barplots\n\n-   A bar plot is a common way to display a single categorical variable\n    -   Show counts (or proportion) per category for a variable\n\n\n::: {.cell}\n\n:::\n\n\n::::: columns\n::: column\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hyp_data, \n       aes(x = Age_Group)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hyp_data, \n       aes(x = Age_Group)) + \n  geom_bar(aes(y = stat(prop), \n               group = 1))\n```\n\n::: {.cell-output-display}\n![](07_Data_visualization_01_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n:::\n:::::\n\n## When to use what?\n\n+-------------------------------+----------------------------+-------------------------------------------------------------+\n| Variable type                 | Possible Visualizations    | Nicky's preferences                                         |\n+===============================+============================+=============================================================+\n| Numerical, discrete           | histograms, boxplots       | histograms                                                  |\n+-------------------------------+----------------------------+-------------------------------------------------------------+\n| Numerical, continuous         | histograms, boxplots       | histograms                                                  |\n+-------------------------------+----------------------------+-------------------------------------------------------------+\n| Categorical, ordinal          | frequency tables, barplots | if I'm just looking: barplot                                |\n|                               |                            |                                                             |\n|                               |                            | if I'm writing a report: frequency table                    |\n+-------------------------------+----------------------------+-------------------------------------------------------------+\n| Categorical, nominal          | frequency tables, barplots | if I'm just looking: barplot                                |\n|                               |                            |                                                             |\n|                               |                            | if I'm writing a report: frequency table                    |\n+-------------------------------+----------------------------+-------------------------------------------------------------+\n| Categorical, logical (binary) | frequency tables, barplots | frequency table or just a percent for one of the categories |\n+-------------------------------+----------------------------+-------------------------------------------------------------+\n\n## Some notes about my visualization process\n\n-   If I am just looking at data alone, I use visualizations and summary statistics\n\n    -   I keep everything in its basic form without polishing the output\n\n    -   Plot labels are kept as variable name\n\n    -   I use a basic function like `summary()` to get\n\n        -   Mean and standard deviation for numeric variables\n\n        -   Counts for categorical variables\n\n-   If I am presenting visualizations or summary statistics, I will polish up everything\n\n    -   So that someone who is unfamiliar with the data can understand what I'm looking at\n\n        -   For example, I make sure variable names are written out and explained\n\n \n\n-   **I want us to practice presenting visualizations, so I really want our homework visualizations to be polished**\n",
    "supporting": [
      "07_Data_visualization_01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}