{
  "hash": "0eb11e79252f2f3bba043f38999a83c7",
  "result": {
    "markdown": "---\ntitle: \"Lesson 8: Data visualization of two variables\"\nauthor: \"Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#3070BF\"\ndate: \"10/23/2024\"\nformat: \n  revealjs:\n    theme: \"../simple_NW.scss\"\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1955\n    height: 1100\n    footer: Lesson 8 Slides\n    html-math-method: mathjax\n    highlight-style: arrow\nexecute:\n  echo: true\n  freeze: auto\n---\n\n\n\n\n# Learning Objectives\n\n1.  Visualize relationships between two numeric variables using scatterplots and determine their correlation\n\n2.  Visualize relationships between two categorical variables using contingency tables and segmented barplots\n\n3.  Visualize relationships between a categorical variable and a numeric variable using side-by-side boxplots, density plots, and ridgeline plots\n\n\n::: {.cell}\n<style type=\"text/css\">\n.reveal code {\n  max-height: 100% !important;\n}\n.reveal pre.sourceCode code {\n  max-height: 100% !important;\n}\n</style>\n:::\n\n\n## Where are we?\n\n![](../img_slides/course_map.png){fig-align=\"center\"}\n\n## Relationships between two variables\n\n- Many studies are motivated by a researcher examining how two or more variables are related\n\n \n\n- Example questions about relationships:\n\n  - Do the values of one variable increase as the values of another decrease? \n  - Do the values of one variable tend to differ by the levels of another variable?\n\n \n\n- Today we are introducing **summarization and data visualization methods** for exploring and summarizing **relationships between two variables**\n\n \n\n- Approaches vary depending on whether the two variables are:\n  - Both numerical\n  - Both categorical\n  - One numerical and one categorical\n  \n## We often identify a response variable from our research question\n  \n::: columns\n::: column\n\n::: red\n::: red-ttl\nResponse Variable\n:::\n::: red-cont\nA **response variable** is defined by the particular research question a study seeks to address\n\n- It **measures the outcome of interest** in the study\n:::\n:::\n:::\n\n::: column\n\n::: blue\n::: blue-ttl\nExplanatory Variable\n:::\n::: blue-cont\nA study will typically examine whether the values of a response variable differ as values of an **explanatory variable** change, and if so, how the two variables are related.\n\n- A given study may examine several explanatory variables for a single response variable\n:::\n:::\n:::\n:::\n\n- Sometimes we're interested in viewing the relationship between our **response variable** and **explanatory variable(s)**\n\n- Sometimes we're just interested in viewing the relationship **between explanatory variables**\n\n## Poll Everywhere Question 1\n\n# Learning Objectives\n\n::: lob\n1.  Visualize relationships between two numeric variables using scatterplots and determine their correlation\n:::\n\n2.  Visualize relationships between two categorical variables using contingency tables and segmented barplots\n\n3.  Visualize relationships between a categorical variable and a numeric variable using side-by-side boxplots, density plots, and ridgeline plots\n\n## Scatterplots\n\n::: columns\n::: {.column width=\"55%\"}\n\n- Scatterplots provide case-by-case view of the **relationship between two numerical variables**\n\n \n\n- We can make a scatterplot of clutch volume vs. body size, with clutch volume on the y-axis and body size on the x-axis\n- Each point represents an observation (egg clutch) with its measurement for clutch volumn and body size of parent\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = frog, \n       aes(x = body.size,\n           y = clutch.volume)) + \n  geom_point(size = 3) +       \n  labs(x = \"Female Body Size (cm)\",\n       y = \"Clutch Volume (mm3)\") \n```\n:::\n\n\n:::\n::: {.column width=\"45%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/scatter_out-1.png){width=768}\n:::\n:::\n\n:::\n:::\n  \n## Describing associations between 2 numerical variables\n\n::: columns\n::: {.column width=\"50%\"}\n\n- Two variables $x$ and $y$ are \n\n  - [**Positively associated**]{style=\"color:#E75B5C;\"} if $y$ increases as $x$ increases\n\n  - [**Negatively associated**]{style=\"color:#BF396F;\"} if $y$ decreases as $x$ increases\n  \n \n\n- If there is no association between the variables, then we say they are **uncorrelated** or **independent**\n\n \n\n- The term \"association\" is a very general term\n\n  - Can be used for numerical or categorical variables\n  - Not specifically referring to linear associations\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/scatter_out-1.png){fig-align='center' width=768}\n:::\n:::\n\n\n::: lob\nFemale body size and clutch volume are positively associated with each other\n:::\n\n:::\n:::\n\n## (Pearson) Correlation coefficient ($r$)\n\n::: columns\n::: {.column width=\"40%\"}\n* $r = -1$ indicates a __perfect negative linear relationship__: As one variable increases, the value of the other variable tends to go down, following a *straight line*\n* $r = 0$ indicates __no linear relationship__: The values of both variables go up/down independently of each other\n* $r = 1$ indicates a __perfect positive linear relationship__: As the value of one variable goes up, the value of the other variable tends to go up as well in a linear fashion\n\n \n\n* The closer $r$ is to ±1, the stronger the linear association\n:::\n\n::: {.column width=\"60%\"}\n\n![](../img_slides/posNegCorPlots.png){fig-align=\"center\"}\n:::\n:::\n\n## Poll Everywhere Question 2\n\n\n\n## (Pearson) Correlation coefficient ($r$): formula\n\nThe (Pearson) correlation coefficient of variables $x$ and $y$ can be computed using the formula\n$$r = \\frac{1}{n-1}\\sum_{i=1}^{n}\\Big(\\frac{x_i - \\bar{x}}{s_x}\\Big)\\Big(\\frac{y_i - \\bar{y}}{s_y}\\Big)$$\nwhere \n\n* $(x_1,y_1),(x_2,y_2),...,(x_n,y_n)$ are the $n$ paired values of the variables $x$ and $y$ \n* $s_x$ and $s_y$ are the sample standard deviations of the variables $x$ and $y$, respectively\n\n \n\n- We can use `cor()` in R to calculate this!\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(frog$body.size, frog$clutch.volume, use = \"pairwise.complete.obs\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6755435\n```\n:::\n:::\n\n\n\n\n\n## Guess the correlation game!\n\n::: columns\n::: {.column width=\"50%\"}\nRossman & Chance's applet\n\n![](../img_slides/screenshot_guess_corr_iscam.png){fig-align=\"center\"}\n\nTracks performance of guess vs. actual, error vs. actual, and error vs. trial\n\n[http://www.rossmanchance.com/applets/GuessCorrelation.html](http://www.rossmanchance.com/applets/GuessCorrelation.html)\n:::\n\n::: {.column width=\"50%\"}\n\n\nOr, for the Atari-like experience\n\n\n![[http://guessthecorrelation.com/](http://guessthecorrelation.com/)](../img_slides/screenshot_guess_corr_atari.png){fig-align=\"center\"}\n\n:::\n:::\n\n# Learning Objectives\n\n1.  Visualize relationships between two numeric variables using scatterplots and determine their correlation\n\n::: lob\n2.  Visualize relationships between two categorical variables using contingency tables and segmented barplots\n:::\n\n3.  Visualize relationships between a categorical variable and a numeric variable using side-by-side boxplots, density plots, and ridgeline plots\n\n## From Lesson 4: Contingency tables\n\n-   We can start looking at the **contingency table** for hypertension for different age groups\n    -   **Contingency table:** type of data table that displays the frequency distribution of two or more categorical variables\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table: Contingency table showing hypertension status and age group, in\nthousands.\n\n|Age Group   | Hypertension| No Hypertension|  Total|\n|:-----------|------------:|---------------:|------:|\n|18-39 years |         8836|          112206| 121042|\n|40-59 years |        42109|           88663| 130772|\n|60+ years   |        39917|           21589|  61506|\n|Total       |        90862|          222458| 313320|\n:::\n:::\n\n\n## From Lesson 4: Probability tables\n\n\n::: {.cell}\n::: {.cell-output-display}\nTable: Table: Probability table summarizing hypertension status and age group.\n\n|Age Group   | Hypertension| No Hypertension|  Total|\n|:-----------|------------:|---------------:|------:|\n|18-39 years |       0.0282|          0.3581| 0.3863|\n|40-59 years |       0.1344|          0.2830| 0.4174|\n|60+ years   |       0.1274|          0.0689| 0.1963|\n|Total       |       0.2900|          0.7100| 1.0000|\n:::\n:::\n\n\n- [**Joint probability**]{style=\"color:#E75B5C;\"}: intersection of row and column\n    \n- [**Marginal probability**]{style=\"color:#BF396F;\"}: row or column total\n\n \n\n::: lob\nWe can work towards visualizing the data in contingency and probability tables\n:::\n\n## Last time: Barplots\nCounts (below) vs. percentages (right)\n\n::: columns\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hyp_data, \n       aes(x = Age_Group)) + \n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n:::\n\n::: column\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = hyp_data, \n       aes(x = Age_Group)) + \n  geom_bar(aes(y = stat(prop), \n               group = 1))\n```\n\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n:::\n\n:::\n\n\n## Barplots with 2 variables: segmented bar plots\n\n- Way of visualizing the information from a contingency table\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = hyp_data, \n       aes(x = Age_Group, \n       fill = Hypertension)) + \n  geom_bar() \n```\n\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n:::\n::: {.column width=\"50%\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nggplot(data = hyp_data, \n       aes(x = Age_Group, \n       fill = Hypertension)) + \n  geom_bar(position = \"fill\")  \n```\n\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n:::\n:::\n\n## Poll Everywhere Question 3\n\n\n\n## Barplots with 2 variables: side-by-side bar plots\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\nggplot(data = hyp_data, \n       aes(x = Age_Group, \n       fill = Hypertension)) + \n  geom_bar(position = \"dodge\") \n```\n\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n# Learning Objectives\n\n1.  Visualize relationships between two numeric variables using scatterplots and determine their correlation\n\n2.  Visualize relationships between two categorical variables using contingency tables and segmented barplots\n\n::: lob\n3.  Visualize relationships between a categorical variable and a numeric variable using side-by-side boxplots, density plots, and ridgeline plots\n:::\n\n## Visualizing relationships between numerical and categorical variables\n\n::: {.column width=\"55%\"}\n- Useful visualizations for directly comparing how the [**distribution of a numerical variable**]{style=\"color:#EF85B3;\"} [**differs by category**]{style=\"color:#367B79;\"}:\n  \n   \n  \n  - Side-by-side boxplots\n  \n   \n  \n  - Side-by-side boxplots with data points\n  \n   \n  \n  - Density plots by group\n  \n   \n  \n  - Ridgeline plot\n:::\n\n## We need to introduce a new dataset for this\n\n- Study investigating whether ACTN3 genotype at a particular location (residue 577) is associated with change in muscle function\n\n \n\n- **Categorical variable:** genotypes (CC, TT, CT)\n\n \n\n- **Numeric variable:** Muscle function, measured as percent change in non-dominant arm strength\n\n \n\n- We can start the investigation by plotting the relationship\n\n## Side-by-side boxplots \n\n- We can look at the boxplot of percent change for each genotype\n\n::: columns\n::: {.column width=\"53%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\nggplot(data = famuss, \n       aes(x = actn3.r577x, \n           y = ndrm.ch)) + \n  geom_boxplot() + \n  labs(x = \"ACTN3 genotype\", \n       y = \"Percent Change in Non-Dominant Arm Strength\")  \n```\n:::\n\n:::\n\n::: {.column width=\"47%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/box_sbs_out-1.png){width=672}\n:::\n:::\n\n:::\n:::\n\n## Side-by-side boxplots with data points\n\n- We can look at the boxplot of percent change for each genotype **with points shown so we can see the distribution of observations better**\n\n::: columns\n::: {.column width=\"53%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"7-11\"}\nggplot(data = famuss, \n       aes(x = actn3.r577x, \n           y = ndrm.ch)) + \n  geom_boxplot() + \n  labs(x = \"ACTN3 genotype\", \n       y = \"Percent Change in Non-Dominant Arm Strength\")  +\n  geom_jitter(aes(color = actn3.r577x), \n    alpha = 0.3,      \n    show.legend = FALSE,      \n    position = position_jitter(     \n      height = 0.4))      \n```\n:::\n\n\n:::\n::: {.column width=\"47%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/box_sbs_jitter_out-1.png){width=672}\n:::\n:::\n\n:::\n:::\n\n## Density plots by group\n\n- Allows us to see the densities of percent change for each genotype\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = famuss, aes(color = actn3.r577x, x = ndrm.ch)) + \n  geom_density() + \n  labs(x = \"Percent Change in Non-Dominant Arm Strength\", color = \"ACTN3 genotype\")  \n```\n\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=1152}\n:::\n:::\n\n\n\n## Ridgeline plot \n\n- Overlapped densities were easy enough to see with 3 genotypes\n- If you have **many categories**, a ridgeline plot might make it easier to see\n\n::: columns\n::: {.column width=\"53%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"6-7\"}\nlibrary(ggridges)\nggplot(data = famuss, \n       aes(y = actn3.r577x, \n           x = ndrm.ch, \n           fill = actn3.r577x)) +\n  geom_density_ridges(alpha = 0.3, \n          show.legend = FALSE) +      \n  labs(x = \"Percent Change in Non-Dominant Arm Strength\",\n       y = \"ACTN3 genotype\",\n       title = \"Strength change by genotype\")       \n```\n:::\n\n:::\n::: {.column width=\"47%\"}\n\n::: {.cell}\n::: {.cell-output-display}\n![](08_Data_visualization_02_files/figure-revealjs/density_ridge_out-1.png){width=720}\n:::\n:::\n\n:::\n:::\n\n## Poll Everywhere Question 4\n\n",
    "supporting": [
      "08_Data_visualization_02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}