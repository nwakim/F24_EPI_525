{
  "hash": "253ecebd7590dc3cf75f1f247d120e46",
  "result": {
    "markdown": "---\ntitle: \"R06: `ggplot2`, Part 1\"\nauthor: \"Meike Niederhausen and Nicky Wakim\"\ntitle-slide-attributes:\n    data-background-color: \"#3070BF\"\ndate: \"10/21/2024\"\nformat: \n  revealjs:\n    theme: \"../simple_NW.scss\"\n    chalkboard: true\n    slide-number: true\n    show-slide-number: all\n    width: 1955\n    height: 1100\n    footer: R06 Slides\n    html-math-method: mathjax\n    highlight-style: arrow\nexecute:\n  echo: true\n  freeze: auto\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n## From last time: R Packages\n\nA good analogy for R packages is that they are like apps you can download onto a mobile phone:\n\n![[ModernDive Figure 1.4](https://moderndive.netlify.com/1-getting-started.html#packages)](../img_slides/R_vs_R_packages.png){fig-align=\"center\"}\n\n## From last time: Install the packages listed below\n\n::::: columns\n::: column\n-   `knitr`\n    -   this might actually already be installed\n    -   check your packages list\n-   `tidyverse`\n    -   this is actually a bundle of packages\n    -   *Warning: it will take a while to install!!!*\n    -   see more info at <https://tidyverse.tidyverse.org/>\n-   `rstatix`\n    -   for summary statistics of a dataset\n-   `janitor`\n    -   for cleaning and exploring data\n:::\n\n::: column\n-   `ggridges`\n    -   for creating ridgeline plots\n-   `devtools`\n    -   used to create R packages\n    -   for our purposes, needed to install some packages\n-   `oi_biostat_data`\n    -   this package is on github\n    -   **see the next slide for directions on how to install `oi_biostat_data`**\n-   `here`\n    -   More info in slides ahead\n:::\n:::::\n\n## From last time: Load packages with `library()` command\n\n-   Tip: **at the top of your Qmd file,** create a chunk that loads all of the R packages you want to use in that file.\n\n-   Use the `library()` command to load each required package.\n\n    -   Packages need to be reloaded *every* time you open Rstudio.\n    -   `library()` commands to load needed packages *must* be in the Qmd file\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# run these every time you open Rstudio\nlibrary(tidyverse) # contains ggplot2    \nlibrary(oibiostat)\nlibrary(ggridges)\nlibrary(janitor)\nlibrary(rstatix)\nlibrary(knitr)\nlibrary(gtsummary) # NEW!!\n```\n:::\n\n\n-   You can check whether a package has been loaded or not\n    -   by looking at the Packages tab and\n    -   seeing whether it has been checked off or not\n\n## Introduction to `ggplot2`\n\n::::: columns\n::: {.column width=\"46%\"}\n![[Artwork by \\@allison_horst](https://allisonhorst.com/)](../img_slides/horst_ggplot2_exploratory.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"54%\"}\n![[Artwork by \\@allison_horst](https://allisonhorst.com/)](../img_slides/ggplot2_masterpiece.png){fig-align=\"center\"}\n:::\n:::::\n\n## `ggplot2` in tidyverse\n\n::::: columns\n::: {.column width=\"40%\"}\n![](../img_slides/ggplot2-part-of-tidyverse.png)\n:::\n\n::: {.column width=\"60%\"}\n-   `ggplot2` is tidyverse's data visualization package\n\n    -   This is one of the main ways to create plots and explore data\n\n \n\n-   The `gg` in \"ggplot2\" stands for Grammar of Graphics\n\n \n\n-   It is inspired by the book **Grammar of Graphics** by Leland Wilkinson\n\n    -   Make graphs/plots by combining independent components\n    -   Start with a basic plot then add layers\n:::\n:::::\n\n\n::: {.cell}\n<style type=\"text/css\">\n.reveal code {\n  max-height: 100% !important;\n}\n</style>\n:::\n\n\n## Basics of a ggplot\n\n![](../img_slides/ggplot_basics_from_ppt.png){fig-align=\"center\"}\n\n## Grammar of ggplot2\n\n::::: columns\n::: {.column width=\"60%\"}\n![](/lessons/img_slides/ggplot_layers.png){fig-align=\"center\" width=\"1600\"}\n:::\n\n::: {.column width=\"40%\"}\n-   `ggplot2` needs at least the following three to produce a chart:\n    -   data, a mapping, and a layer\n\n \n\n-   For the most part, there are default settings for the other parts:\n    -   scales, facets, coordinates, and themes\n:::\n:::::\n\n## **Data**\n\n-   ggplot2 uses data to construct a plot\n\n-   Works best when every observation is a row and each variable is a column\n\n-   First step in plotting:\n\n    -   Pass the data to the `ggplot` function, which stores the data to be used later by other parts of the plotting system\n\n## Data\n\n-   For example, if we intend to make a graphic about the `mpg` dataset, we would start as follows:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(data = mpg)\n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## **Mapping**\n\n-   Mappings use the `aes()` function to **map** variables to the different axes on a plot\n\n    -   `aes()` stands for \"aesthetics\"\n\n## Data + Mapping\n\n-   If we want the `cty` and `hwy` columns to map to the x- and y-coordinates in the plot, we can do that as follows:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(mpg, mapping = aes(x = cty, y = hwy))\n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## **Layers**\n\nThe heart of any graphic is the [layers](https://ggplot2-book.org/toolbox.html). They take the mapped data and display it in something humans can understand as a representation of the data. Every layer consists of three important parts:\n\n1.  The [**geometry**](https://ggplot2-book.org/individual-geoms.html) that determines *how* data are displayed, such as points, lines, or rectangles.\n\n2.  The [**statistical transformation**](https://ggplot2-book.org/statistical-summaries.html) that may compute new variables from the data and affect *what* of the data is displayed.\n\n3.  The [**position adjustment**](https://ggplot2-book.org/layers.html#position) that primarily determines *where* a piece of data is being displayed.\n\nA layer can be constructed using the `geom_*()` and `stat_*()` functions. These functions often determine one of the three parts of a layer, while the other two can still be specified. Here is how we can use two layers to display the `cty` and `hwy` columns of the `mpg` dataset as points and stack a trend line on top.\n\n## Data + Mapping + Layers\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(mpg, aes(cty, hwy)) +\n  # to create a scatterplot\n  geom_point() +\n  # to fit and overlay a loess trendline\n  geom_smooth(formula = y ~ x, method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=576}\n:::\n:::\n\n\n## more\n\n![[Kieran Healy](https://github.com/rstudio-conf-2020/dataviz)](../img_slides/khealy_ggplot1.png){fig-align=\"center\"}\n\n# Case study?\n\n# Visualize numerical variables with `ggplot2`\n\n## Case Study Description\n\n-   In the US, individuals with developmental disabilities typically receive services and support from state governments.\n\n    -   California allocates funds to developmentally disabled residents through the *Department of Developmental Services (DDS)*\n    -   Recipients of DDS funds are referred to as \"consumers.\"\n\n \n\n-   Dataset `dds.discr`\n\n    -   Sample of 1,000 DDS consumers (out of a total of \\~ 250,000)\n    -   Data include [age, sex assigned at birth, race/ethnicity, and annual DDS financial support per consumer]{style=\"color:#C83532\"}\n\n \n\n-   For now, we are going to explore these data with `R`\n\n-   See Section 1.7.1 in the textbook for more details\n\n## Load `dds.discr` dataset from `oibiostat` package\n\n-   The textbook's datasets are in the R package `oibiostat`\n\n-   Make sure the `oibiostat` package is installed before running the code below.\n\n-   Load the `oibiostat` package and the dataset `dds.discr`\n\n \n\n[**The code below needs to be run *every time* you restart R or render a Qmd file:**]{style=\"color:#BF396F\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(oibiostat)\ndata(\"dds.discr\")\n```\n:::\n\n\n \n\n-   After loading the dataset `dds.discr` using `data(\"dds.discr\")`, you will see `dds.discr` in the Data list of the Environment window.\n\n## `glimpse()`\n\n-   We previously used the base R structure command `str()` to get information about variable types in a dataset (in R03: R basics part 2)\n-   Use `glimpse()` from the `tidyverse` package (technically it's from the `dplyr` package) to get information about variable types.\n-   `glimpse()` tends to have nicer output for `tibbles` than `str()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nglimpse(dds.discr)  # from tidyverse package (dplyr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ gender       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ ethnicity    <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n## Some things to note on this dataset\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dds.discr)  # from tidyverse package (dplyr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ gender       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ ethnicity    <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n-   This happens in older datasets (and honestly some newer ones): gender and sex get conflated\n    -   I try to catch these issues before sharing datasets with you, but when we load datasets directly from the `oibiostat` package, I can't make these changes\n    -   If you are unfamiliar with the differences, please see [this NIH site on sex and gender](https://orwh.od.nih.gov/sex-gender)\n-   Also, race and ethnicity can be mislabeled\n    -   \"White not hispanic\" combines race and ethnicity\n    -   If you are unfamiliar with the differences, please see [this APA site on race and ethnicity](https://www.apa.org/topics/race-ethnicity)\n\n## `rename()`: one of the first things I usually do\n\n-   I want to rename the variable, gender, to sex and rename ethnicity to r_e (race and ethnicity)\n\n \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndds.discr1 = dds.discr %>% \n  rename(sex_MF = gender, \n         r_e = ethnicity)\n\nglimpse(dds.discr1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 6\n$ id           <int> 10210, 10409, 10486, 10538, 10568, 10690, 10711, 10778, 1…\n$ age.cohort   <fct> 13-17, 22-50, 0-5, 18-21, 13-17, 13-17, 13-17, 13-17, 13-…\n$ age          <int> 17, 37, 3, 19, 13, 15, 13, 17, 14, 13, 13, 14, 15, 17, 20…\n$ sex_MF       <fct> Female, Male, Male, Female, Male, Female, Female, Male, F…\n$ expenditures <int> 2113, 41924, 1454, 6400, 4412, 4566, 3915, 3873, 5021, 28…\n$ r_e          <fct> White not Hispanic, White not Hispanic, Hispanic, Hispani…\n```\n:::\n:::\n\n\n## Histograms\n\nWhat is being measured on the vertical axes?\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = dds.discr1, \n       aes(x = expenditures)) +\n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n:::\n:::::\n\n## Histograms showing proportions\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram(\n    aes(y = stat(density)))  \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-6\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram(\n    aes(y = stat(density))) +  \n  scale_y_continuous(labels =   \n      scales::percent_format())  \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n:::\n:::::\n\n## Density plots {visibility=\"hidden\"}\n\nWhat is being measured on the vertical axes?\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_density() \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, \n       aes(x = age)) +\n  geom_histogram() \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n:::\n:::::\n\n## Boxplots\n\n::::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = dds.discr1, \n       aes(x = age)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-17-1.png){width=480}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\nggplot(data = dds.discr1, \n       aes(y = age)) + \n  geom_boxplot() \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-18-1.png){width=480}\n:::\n:::\n\n:::\n:::::\n\n# Categorical data\n\n## Barplots\n\n::::: columns\n::: {.column width=\"50%\"}\nCounts (below) vs.\\\npercentages (right)\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, \n       aes(x = r_e)) +\n  geom_bar() \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-19-1.png){width=576}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-6\"}\nggplot(data = dds.discr1, \n       aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop),  \n               group = 1)) + \n  scale_y_continuous(labels =  \n      scales::percent_format())  \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-20-1.png){width=576}\n:::\n:::\n\n:::\n:::::\n\n## Adding more to plots!\n\nTilt text so we can read it!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = dds.discr1, aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop), group = 1)) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  \n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-21-1.png){width=1344}\n:::\n:::\n\n\n## Adding more to plots!\n\nWe can change labels!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-5\"}\nggplot(data = dds.discr1, aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop), group = 1)) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(x = \"Race and ethnicity\", y = \"Proportion\", \n       title = \"Proportion of individuals receiving DDS by race and ethnicity\")\n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-22-1.png){width=1344}\n:::\n:::\n\n\n## Adding more to plots!\n\nIncrease text size so we can read it!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3-5\"}\nggplot(data = dds.discr1, aes(x = r_e)) +\n  geom_bar(aes(y = stat(prop), group = 1)) +\n  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 35),\n        axis.title = element_text(size = 35))\n```\n\n::: {.cell-output-display}\n![](R06_ggplot_01_files/figure-revealjs/unnamed-chunk-23-1.png){width=1344}\n:::\n:::\n\n\n## Resources on `ggplot`\n\n-   `ggplot2` package website: <https://ggplot2.tidyverse.org/articles/ggplot2.html>\n-   Online textbook for `ggplot2`: <https://ggplot2-book.org/>\n-   Another online resource for data visualization with `ggplot2`: <https://socviz.co/index.html#preface>\n",
    "supporting": [
      "R06_ggplot_01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}