---
title: "Lesson 9: Variability in estimates"
subtitle: "TB sections 4.1"
author: "Meike Niederhausen and Nicky Wakim"
title-slide-attributes:
    data-background-color: "#3070BF"
date: "10/28/2024"
format: 
  revealjs:
    theme: "../simple_NW.scss"
    chalkboard: true
    slide-number: true
    show-slide-number: all
    width: 1955
    height: 1100
    footer: Lesson 9 Slides
    html-math-method: mathjax
    highlight-style: arrow
execute:
  echo: true
  freeze: auto
---


```{r}
#| label: "setup" 
#| include: false
#| message: false
#| warning: false

library(tidyverse)
library(janitor)
library(rstatix)
library(oibiostat) 
library(knitr)
library(moderndive) # NEW!!

# terminal: for icons
# quarto install extension quarto-ext/fontawesome

# set ggplot theme for slides 
theme_set(theme_bw(base_size = 22))
# theme_update(text = element_text(size=16))  # set global text size for ggplots

set.seed(456)
```

```{css, echo=FALSE}
.reveal code {
  max-height: 100% !important;
}
```

# Learning Objectives
1. Understand that a single sample may not be a perfect representation of the population

2. Illustrate how information from several samples are connected to the population

  - There is variation between samples

3. Learn characteristics of the Sampling Distribution of Sample Means

  - Mean of the sampling distribution is the same as mean of population

4. Distinguish different language referring to different variabilities

  - Variability of the population
  - Variability within a sample 
  - Variability between samples 

5. Solidify what we learn about sampling distributions through coding and visualizing in Rstudio Cloud


## Where are we?

![](../img_slides/course_map.png){fig-align="center"}

## Summary: Point Estimate Terminology

- **Population mean**: $\mu$
- **Population standard deviation**: $\sigma$
- **Sample mean**: $\overline{x}$
- **Sample standard deviation**: $s$
- **Sampling distribution**: Distribution of sample means for repeated samples.
- **Standard error (SE)**: The standard deviation of the sampling distribution.
    - Formula: $SE = \frac{s}{\sqrt{n}}$

## Goals for today

__Section 4.1__

* Sampling from a population
  * population parameters vs. point estimates
  * sampling variation

* Sampling distribution of the mean
  * Central Limit Theorem
  * Standard error of the mean

![[Artwork by @allison_horst](https://allisonhorst.com/)](../img_slides/horst_samples.png){fig-align="center"}


## From Lesson 1: Population vs. sample

::: columns
::: column

::: red
::: red-ttl
(Target) Population
:::
::: red-cont
* Group of interest being studied
* Group from which the sample is selected
  - Studies often have _inclusion_ and/or _exclusion_ criteria
* Almost always too expensive or logistically impossible to collect data for every case in a population
  
:::
:::
:::

::: column
::: pink
::: pink-ttl
Sample
::: 
::: pink-cont
* Group on which data are collected
* Often a **small subset** of the population
* Easier to collect data on 
* If we do it right, we might be able to answer our question about the target population
:::
:::

:::
:::

## From Lesson 1: Sampling 

- Goal is to get a __representative__ sample of the population: the characteristics of the sample are similar to the characteristics of the population
- There are different ways to sample from a target population
- Types of sampling that we discuss
    - Simple random sample (SRS)
    - Convenient sample
    - Stratified sample
    - Cluster sample
    - Multistage sample
    
## Why sample statistics?

- When we want to estimate features of the population

  - We can use corresponding summary statistics calculated from our sample

 

- Much easier to measure statistics from our sample (Lesson 1)

  - However, statistics from our sample are not exactly the same as the population measurements that we're aiming for
  
  - We call the population measurements **population parameters**
  
 

- So we need to start by distinguishing between the population parameters and sample statistics


## Population parameters vs. sample statistics

::: columns
::: {.column width="50%"}

[__Population parameter__]{style="color:#C83532;"}

- Mean: $\mu$ ("mu")
- Standard deviation: $\sigma$ ("sigma")
- Variance: $\sigma^2$

 

- Proportion: $p$, $\pi$ ("pi")

 

- Correlation

:::

::: {.column width="50%"}
[__Sample statistic (point estimate)__]{style="color:#EF85B3;"}

- Sample mean: $\overline{x}$
- Sample standard deviation: $s$
- Sample variance: $s^2$

 

- Sample proportion: $\hat{p}$ ("p-hat")

 

- Sample correlation coefficient: $r$

:::
:::

## Poll Everywhere Question 1

# Sampling variation
Build the intuition around samplign variation

## Population 

![](../img_slides/samp_dist_01.png){fig-align="center"}

## Take one sample

![](../img_slides/samp_dist_02.png){fig-align="center"}

## Take one sample

![](../img_slides/samp_dist_03.png){fig-align="center"}

## Take one sample

![](../img_slides/samp_dist_04.png){fig-align="center"}

## Take one sample

![](../img_slides/samp_dist_05.png){fig-align="center"}

## Take one sample

![](../img_slides/samp_dist_06.png){fig-align="center"}

## Take another sample

![](../img_slides/samp_dist_07.png){fig-align="center"}

## Take another sample

![](../img_slides/samp_dist_08.png){fig-align="center"}

## Take another sample

![](../img_slides/samp_dist_09.png){fig-align="center"}

## Take another sample

![](../img_slides/samp_dist_10.png){fig-align="center"}

## Take several samples

![](../img_slides/samp_dist_11.png){fig-align="center"}

## Difference between samples?

![](../img_slides/samp_dist_12.png){fig-align="center"}


## More concrete example with height



# Meike's notes



## Our hypothetical population: YRBSS

__[Youth Risk Behavior Surveillance System](https://www.cdc.gov/healthyyouth/data/yrbs/index.htm) (YRBSS)__

* Yearly survey conducted by the US Centers for Disease Control (CDC) 
* "A set of surveys that track behaviors that can lead to poor health in students grades 9 through 12."[^1]
* Dataset `yrbss` from `oibiostat` pacakge contains responses from _n_ = 13,583 participants in 2013 for a subset of the variables included in the complete survey data

[^1]: Youth Risk Behavior Surveillance System [https://www.cdc.gov/healthyyouth/data/yrbs/index.htm](https://www.cdc.gov/healthyyouth/data/yrbs/index.htm) (YRBSS)

::: columns
::: {.column width="50%"}
```{r}
library(oibiostat)
data("yrbss")  #load the data
# ?yrbss
```
:::
::: {.column width="50%"}

```{r}
dim(yrbss)
```
:::
:::
```{r}
names(yrbss)
```



## Getting to know the dataset: `glimpse()`


```{r}
glimpse(yrbss)  # from tidyverse package (dplyr)
```




## Height & weight variables

::: columns
::: {.column width="50%"}
```{r}
yrbss %>% 
  select(height, weight) %>% 
  summary()


```
:::
::: {.column width="50%"}

```{r}
#| fig.height: 7
ggplot(data = yrbss, 
       aes(x = height)) +
  geom_histogram()
```
:::
:::


## Transform height & weight from metric to to standard

Also, drop missing values and add a column of id values
```{r}
yrbss2 <- yrbss %>%                 # save new dataset with new name
  mutate(                           # add variables for 
    height.ft = 3.28084*height,     #     height in feet
    weight.lb = 2.20462*weight      #     weight in pounds
  ) %>% 
  drop_na(height.ft, weight.lb) %>% # drop rows w/ missing height/weight values
  mutate(id = 1:nrow(.)) %>%        # add id column
  select(id, height.ft, weight.lb)  # restrict dataset to columns of interest

head(yrbss2)  
dim(yrbss2)
# number of rows deleted that had missing values for height and/or weight:
nrow(yrbss) - nrow(yrbss2) 
```


## `yrbss2` summary

```{r}
summary(yrbss2)
```

Another summary:

```{r}
yrbss2 %>% 
  get_summary_stats(type = "mean_sd") %>% 
  kable()
```


## Random sample of size n = 5 from `yrbss2`

::: columns
::: {.column width="50%"}

Take a random sample of size n = 5 from `yrbss2`:
```{r}
library(moderndive)
samp_n5_rep1 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 1,
               replace = FALSE)
samp_n5_rep1
```

:::
::: {.column width="50%"}
Calculate the mean of the random sample:
```{r}
#| fig.height: 5.5
means_hght_samp_n5_rep1 <- 
  samp_n5_rep1 %>% 
  summarise(
    mean_height = mean(height.ft))

means_hght_samp_n5_rep1
```

:::
:::

[Would we get the same mean height if we took another sample?]{style="color:purple"}



## Sampling variation

* If a different random sample is taken, the mean height (point estimate) will likely be different
    * this is a result of __[sampling variation]{style="color:darkorange"}__

::: columns
::: {.column width="50%"}

Take a 2nd random sample of size  
n = 5 from `yrbss2`:
```{r}
samp_n5_rep1 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 1,
               replace = FALSE)
samp_n5_rep1
```
:::
::: {.column width="50%"}
Calculate the mean of the 2nd random sample:
```{r}
#| fig.height: 5.5
means_hght_samp_n5_rep1 <- 
  samp_n5_rep1 %>% 
  summarise(
    mean_height = mean(height.ft))

means_hght_samp_n5_rep1
```
:::
:::

[Did we get the same mean height with our 2nd sample?]{style="color:purple"}


## 100 random samples of size n = 5 from `yrbss2`

::: columns
::: {.column width="50%"}
Take 100 random samples of size  
n = 5 from `yrbss2`:
```{r}
samp_n5_rep100 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 100,
               replace = FALSE)
samp_n5_rep100
```

:::
::: {.column width="50%"}
Calculate the mean for each of the 100 random samples:
```{r}
means_hght_samp_n5_rep100 <- 
  samp_n5_rep100 %>% 
  group_by(replicate) %>% 
  summarise(
    mean_height = mean(height.ft))

means_hght_samp_n5_rep100
```
:::
:::

[How close are the mean heights for each of the 100 random samples?]{style="color:purple"}


## Distribution of 100 sample mean heights (n = 5)
::: columns
::: {.column width="45%"}
Describe the distribution shape. 
```{r}
#| fig.height: 5
#| fig.width: 5
ggplot(
  means_hght_samp_n5_rep100, 
  aes(x = mean_height)) + 
  geom_histogram()
```

:::
::: {.column width="55%"}
Calculate the mean and SD of the 100 mean heights from the 100 samples:
```{r}
stats_means_hght_samp_n5_rep100 <- 
  means_hght_samp_n5_rep100 %>% 
  summarise(
   mean_mean_height = mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n5_rep100
```


[Is the mean of the means close to the "center" of the distribution?]{style="color:purple"}
:::
:::


## 10,000 random samples of size n = 5 from `yrbss2`
::: columns
::: {.column width="50%"}
Take 10,000 random samples of size  
n = 5 from `yrbss2`:
```{r}
samp_n5_rep10000 <- yrbss2 %>%
  rep_sample_n(size = 5, 
               reps = 10000,
               replace = FALSE)
samp_n5_rep10000
```

:::
::: {.column width="50%"}
Calculate the mean for each of the 10,000 random samples:
```{r}
means_hght_samp_n5_rep10000 <- 
  samp_n5_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(
    mean_height = mean(height.ft))

means_hght_samp_n5_rep10000
```
:::
:::

[How close are the mean heights for each of the 10,000 random samples?]{style="color:purple"}


## Distribution of 10,000 sample mean heights (n = 5)
::: columns
::: {.column width="48%"}
Describe the distribution shape. 
```{r}
#| fig.height: 5
#| fig.width: 5
ggplot(
  means_hght_samp_n5_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()
```

:::
::: {.column width="52%"}
Calculate the mean and SD of the 10,000 mean heights from the 10,000 samples:
```{r}
stats_means_hght_samp_n5_rep10000 <- 
  means_hght_samp_n5_rep10000 %>% 
  summarise(
   mean_mean_height=mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n5_rep10000
```

[Is the mean of the means close to the "center" of the distribution?]{style="color:purple"}
:::
:::


## 10,000 samples of size n = 30 from `yrbss2`
::: columns
::: {.column width="50%"}
Take 10,000 random samples of size  
n = 30 from `yrbss2`:
```{r}
samp_n30_rep10000 <- yrbss2 %>%
  rep_sample_n(size = 30, 
               reps = 10000,
               replace = FALSE)
samp_n30_rep10000
```

:::
::: {.column width="50"}
Calculate the mean for each of the 10,000 random samples:
```{r}
means_hght_samp_n30_rep10000 <- 
  samp_n30_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(mean_height = 
            mean(height.ft))

means_hght_samp_n30_rep10000
```
:::
:::

[How close are the mean heights for each of the 10,000 random samples?]{style="color:purple"}


## Distribution of 10,000 sample mean heights (n = 30)
::: columns
::: {.column width="48%"}
Describe the distribution shape. 
```{r}
#| fig.height: 5
#| fig.width: 5
ggplot(
  means_hght_samp_n30_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()
```

:::
::: {.column width="52%"}
Calculate the mean and SD of the 10,000 mean heights from the 10,000 samples:
```{r}
stats_means_hght_samp_n30_rep10000<- 
  means_hght_samp_n30_rep10000 %>% 
  summarise(
   mean_mean_height=mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n30_rep10000
```

[Is the mean of the means close to the "center" of the distribution?]{style="color:purple"}
:::
:::


## Compare distributions of 10,000 sample mean heights when n = 5 (left) vs. n = 30 (right)

[How are the center, shape, and spread similar and/or different?]{style="color:purple"}

::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 5
#| fig.width: 5
#| echo: false
ggplot(
  means_hght_samp_n5_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()

stats_means_hght_samp_n5_rep10000
```

:::
::: {.column width="50%"}

```{r}
#| fig.height: 5
#| fig.width: 5
#| echo: false
ggplot(
  means_hght_samp_n30_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()

stats_means_hght_samp_n30_rep10000
```
:::
:::


## Sampling high schoolers' weights

::: columns
::: {.column width="100%"}
Which figure is which?

* Population distribution of weights
* Sampling distribution of mean weights when $n=5$
* Sampling distribution of mean weights when $n=30$.
:::
:::

::: columns
::: {.column width="32%"}
A
```{r}
#| echo: false
#| fig.height: 10
means_wght_samp_n30_rep10000 <- 
  samp_n30_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(mean_weight = 
            mean(weight.lb))

# means_wght_samp_n30_rep10000
ggplot(
  means_wght_samp_n30_rep10000, 
  aes(x = mean_weight)) + 
  geom_histogram() +
  theme(text=element_text(size=50))+
  labs(x = "")
```
:::

::: {.column width="32%"}
B
```{r}
#| echo: false
#| fig.height: 10
means_wght_samp_n5_rep10000 <- 
  samp_n5_rep10000 %>% 
  group_by(replicate) %>% 
  summarise(mean_weight = 
            mean(weight.lb))

# means_wght_samp_n5_rep10000
ggplot(
  means_wght_samp_n5_rep10000, 
  aes(x = mean_weight)) + 
  geom_histogram() +
  theme(text=element_text(size=50)) +
  labs(x = "")
```
:::

::: {.column width="32%"}
C
```{r}
#| echo: false
#| fig.height: 10
ggplot(data = yrbss2, 
       aes(x = weight.lb)) +
  geom_histogram() +
  # lab(title = "population distribution") +
  theme(text=element_text(size=50)) +
  labs(x = "")
```
:::
:::


## The sampling distribution of the mean
::: columns
::: {.column width="50%"}
* The __[sampling distribution]{style="color:darkorang"}__ of the mean is the distribution of sample means calculated from repeated random samples of _the same size_ from the same population

* Our simulations show approximations of the sampling distribution of the mean for various sample sizes

* The theoretical sampling distribution is based on all possible samples of a given sample size $n$.
:::

::: {.column width="50%"}
```{r}
#| echo: false
#| fig.height: 5.5
ggplot(data = yrbss2, 
       aes(x = weight.lb)) +
  geom_histogram() +
  xlim(65, 400) +
  labs(title = "Population distribution") +
  theme(text=element_text(size=30))
```

```{r}
#| echo: false
#| fig.height: 5.5
ggplot(
  means_wght_samp_n30_rep10000, 
  aes(x = mean_weight)) + 
  geom_histogram() +
  xlim(65, 400)+
  labs(title = "Sampling distribution (n=30)") +
  theme(text=element_text(size=30))
```

:::
:::


## The Central Limit Theorem (CLT) 

* For **"large" sample sizes** ( $n\geq 30$ ),
    * the __sampling distribution__ of the sample mean
    * can be approximated by a __normal distribution__,with 
      * _mean_ equal to the _population mean_ value $\mu$, and 
      * _standard deviation_ $\frac{\sigma}{\sqrt{n}}$

<!-- $$\bar{X}\sim N(\mu_{\bar{X}} = \ \ \ \ \ \ \ \ \ \ \ , \sigma_{\bar{X}}= \ \ \ \ \ \ \ \ \ \ \ )$$ -->
<br>
<br>
<br>

* For **small sample sizes**, if the population is known to be normally distributed, then
    * the __sampling distribution__ of the sample mean
    * is a __normal distribution__, with 
      * _mean_ equal to the _population mean_ value $\mu$, and 
      * _standard deviation_ $\frac{\sigma}{\sqrt{n}}$



## The cutest statistics video on YouTube

* _[Bunnies, Dragons and the 'Normal' World: Central Limit Theorem]{style="color:purple"}_ 
    * Creature Cast from the New York Times
    * [https://www.youtube.com/watch?v=jvoxEYmQHNM&feature=youtu.be](https://www.youtube.com/watch?v=jvoxEYmQHNM&feature=youtu.be)

![](../img_slides/CLT_video_preview.png){fig-align="center" width=80%}



## Sampling distribution of mean heights when n = 30 (1/2)
::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 5
#| fig.width: 5
ggplot(
  means_hght_samp_n30_rep10000, 
  aes(x = mean_height)) + 
  geom_histogram()
```

:::
::: {.column width="50%"}

CLT tells us that we can model the sampling distribution of mean heights using a normal distribution.

```{r}
#| echo: false
#| fig.height: 5.5
#| fig.width: 6
mu <- 5.55
SE <- 0.34/sqrt(30)
sig <- round(SE, 2)

# sig
# mu+sig
# mu+2*sig
# mu-sig
# mu-2*sig

gg_samp_dist_heights <- ggplot(data.frame(x = c(mu-4*sig, mu+4*sig)), aes(x = x)) + 
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig)) + 
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu-4*sig, mu-2*sig), 
                geom = "area", fill = "darkblue") +
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu+2*sig, mu+4*sig), 
                geom = "area", fill = "darkblue") +
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu-2*sig, mu-1*sig), 
                geom = "area", fill = "darkgreen") +
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu+1*sig, mu+2*sig), 
                geom = "area", fill = "darkgreen")+
  stat_function(fun = dnorm, 
                args = list(mean = mu, sd = sig), 
                xlim = c(mu-1*sig, mu+1*sig), 
                geom = "area", fill = "orange") +
  scale_x_continuous(name ="mean height (ft)", 
                    breaks=c(mu-2*sig,mu-1*sig,mu, mu+1*sig, mu+2*sig)) +
  labs(title = "Sampling distribution", y = "") +
  scale_y_continuous(labels = NULL, breaks = NULL)

gg_samp_dist_heights   
```
:::
:::


## Sampling distribution of mean heights when n = 30 (2/2)
::: columns
::: {.column width="65%"}
Mean and SD of population:

```{r}
(mean_height.ft <- mean(yrbss2$height.ft))
(sd_height.ft <- sd(yrbss2$height.ft))
sd_height.ft/sqrt(30)
```

Mean and SD of simulated sampling distribution:

```{r}
stats_means_hght_samp_n30_rep10000<- 
  means_hght_samp_n30_rep10000 %>% 
  summarise(
   mean_mean_height=mean(mean_height),
   sd_mean_height = sd(mean_height)
   )
stats_means_hght_samp_n30_rep10000
```
:::
::: {.column width="35%"}
```{r}
#| echo: false
#| fig.height: 5
#| fig.width: 4
gg_samp_dist_heights +
  theme(text=element_text(size=15))
```
:::
:::


## Why is the mean $\mu$ & the standard error $\frac{\sigma}{\sqrt{n}}$ ?



## Applying the CLT

What is the probability that for a random sample of 30 high schoolers, that their mean height is greater than 5.6 ft?


## Class Discussion

* Slide 21: match figures to distribution (Sampling high schoolers' weights)

Problems from Homework 4:

* R1: Youth weights (YRBSS)
* Book exercise: 4.2
* Non-book exercise: Ethan Allen



