---
title: "Lesson 3: Data visualization"
date: "10/4/2023"
categories: ["Week 2"]
author: "Meike Niederhausen and Nicky Wakim"
title-slide-attributes:
    data-background-color: "#3070BF"
format: 
  revealjs:
    theme: "../simple_NW.scss"
    toc: true
    toc-depth: 1
    toc-title: Class Overview
    chalkboard: true
    slide-number: true
    show-slide-number: all
    width: 1600
    height: 1100
    footer: Lesson 3 Slides
    html-math-method: mathjax
    highlight-style: arrow
execute:
  echo: true
  freeze: auto
---


```{r}
#| label: "setup" 
#| include: false
#| message: false
#| warning: false

library(tidyverse)
library(lubridate)
library(janitor)
library(here)

# terminal: for icons
# quarto install extension quarto-ext/fontawesome

# set ggplot theme for slides 
theme_set(theme_bw(base_size = 22))
# theme_update(text = element_text(size=20))  # set global text size for ggplots
```



## Goals for today 

::: columns
::: {.column width="50%"}

* __Exploratory Data Analysis (EDA)__ (Sections 1.4, 1.5, 1.6, 1.7.1)
  * Data visualization with ggplot
    * numerical & categorical variables, and relationships between variables
  * Summarizing numerical data
  * Frequency (two-way) tables

* Some __data wrangling__ techniques along the way
:::

::: {.column width="50%"}
![[Artwork by @allison_horst](https://allisonhorst.com/)](/img_slides/horst_ggplot2_exploratory.png){fig-align="center"}

:::
:::


## International Day of Women in Statistics and Data Science 

Tuesday, October 10, 2022

12 am - 11:59 pm UTC (5pm 10/9 to 4:59 pm 10/10 here)

![[International Day of Women in Statistics and Data Science](http://www.idwsds.org/)](/img_slides/IDWSDS-logo-large.png){fig-align="center"}


## Mimi's tip of the day: sending messages in Slack 

::: columns
::: {.column width="70%"}

Are you frustrated that Slack sends a message when you press Enter? You can change that! 

::: {layout-ncol=2}
![](/img_slides/Slack_preferences.png){width=255}

![](/img_slides/Slack_preferences_startnewline.png){width=515}
:::  

:::

::: {.column width="30%"}
![](/img_slides/mimi_IMG_4498.png){fig-align="center"}
:::
:::


## Recap of last time 

* (1.3) __Data collection principles__
  - Population vs. sample
  - Sampling methods
  - Experiments vs. Observational studies

* (1.2) __Intro to Data__
  - Data types
    - Numerical: discrete (integer in R), continuous (double or numeric in R)
    - Categorical: ordinal, nominal
        - character or factor in R
  - How are data stored in R? data frames, tibbles
  - Working with data in R: `dim()`, `nrow()`, `ncol()`, `names()`, `str()`, 
  `summary()`, `head()`, `tail()`, `$` 
  
* (1.4) __Summarizing numerical data__ 
  - `mean()`, `median()`, `sd()`, `quantile()`

# R Packages

A good analogy for R packages is that they   
are like apps you can download onto a mobile phone:

<img src="https://moderndive.netlify.com/images/shutterstock/R_vs_R_packages.png" width="80%" height="100%">

[ModernDive Figure 1.4](https://moderndive.netlify.com/1-getting-started.html#packages)


## From last time: Install the pacakges listed below
::: {style="font-size: 50%;"}
* `knitr` 
  - this might actually already be installed
  - check your packages list
* `tidyverse` 
  - this is actually a bundle of packages
  - *Warning: it will take a while to install!!!*
  - see more info at [https://tidyverse.tidyverse.org/](https://tidyverse.tidyverse.org/) 
* `rstatix`
  - for summary statistics of a dataset
* `janitor`
  - for cleaning and exploring data
* `ggridges`
  - for creating ridgeline plots
* `devtools` 
  - used to create R packages
  - for our purposes, needed to install some packages
* `oi_biostat_data` 
  - this package is on github 
  - __see the next slide for directions on how to install `oi_biostat_data`__

:::  


## Directions for installing package `oibiostat` 

::: {style="font-size: 70%;"}
* The textbook's datasets are in the R package `oibiostat`
* Explanation of code below
  * Installation of `oibiostat` package requires first installing `devtools` package
  * The code `devtools::install_github()` tells R to use the command `install_github()` from the `devtools` package without loading the entire package and all of its commands (which `library(devtools)` would do).
:::
  
```{r}
#| eval: false

install.packages("devtools")
devtools::install_github("OI-Biostat/oi_biostat_data", force = TRUE)
```

::: {style="font-size: 70%;"}
* After running the code above, put `#` in front of the commands so that RStudio doesn't evaluate them when rendering.
* Now load the `oibiostat` package
  * [the code below needs to be run _every time_ you restart R or render a Qmd file]{style="color:darkorange"}
:::

```{r}
library(oibiostat)
```



## Load packages with `library()` command  

::: {style="font-size: 90%;"}
- Tip: __at the top of your Qmd file,__ create a chunk that loads all of the R packages you want to use in that file. 

- Use the `library()` command to load each required package.
  - Packages need to be reloaded *every* time you open Rstudio.
  - `library()` commands to load needed packages *must* be in the Qmd file
:::

```{r}
# run these every time you open Rstudio
library(tidyverse)    
library(oibiostat)
library(ggridges)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary) # NEW!!
```

::: {style="font-size: 90%;"}
- You can check whether a package has been loaded or not 
  - by looking at the Packages tab and 
  - seeing whether it has been checked off or not
:::

# Case study: discrimination in developmental disability support (Section 1.7.1)

## Case Study Description 

::: {style="font-size: 65%;"}
* In the US, individuals with developmental disabilities typically receive services and support from state governments. 
  * California allocates funds to developmentally disabled residents through the _Department of Developmental Services (DDS)_
  * Recipients of DDS funds are referred to as "consumers." 
* Dataset `dds.discr` 
  * sample of 1,000 DDS consumers (out of a total of ~ 250,000)
  * data include __[age, gender, race/ethnicity, and annual DDS financial support per consumer]{style="color:green"}__
* __Previous research__
  * Researchers examined expenditures on consumers by ethnicity
  * Found that the mean annual expenditure on Hispanics was less than that on White non-Hispanics. 
* Result: an allegation of ethnic discrimination was brought against the California DDS.
* __Question: Are the data sufficient evidence of ethnic discrimination?__

* See Section 1.7.1 in the textbook for more details
:::


## Load `dds.discr` dataset from `oibiostat` package

::: {style="font-size: 90%;"}
* The textbook's datasets are in the R package `oibiostat`
* Make sure the `oibiostat` package is installed before running the code below.

* Load the `oibiostat` package and the dataset `dds.discr`

__[the code below needs to be run _every time_ you restart R or render a Qmd file]{style="color:darkorange"}__
```{r}
library(oibiostat)
data("dds.discr")
```

* After loading the dataset `dds.discr` using `data("dds.discr")`, you will see `dds.discr` in the Data list of the Environment window.
:::


## Getting to know the dataset

```{r}
dim(dds.discr)
names(dds.discr)
length(unique(dds.discr$id)) # How many unique id's are there?
```


## `str()` structure

::: {style="font-size: 80%;"}
* We previously used the base R structure command `str()` to get information about variable types in a dataset. 
* Note this dataset is a `tibble` instead of a `data.frame`
:::
```{r}
str(dds.discr)      # base R
```

<!-- ![](/img_slides/dds.discr_str.png){fig-align="center"} -->


## `glimpse()`

::: {style="font-size: 80%;"}
__New: `glimpse()`__

* Use `glimpse()` from the `tidyverse` package (technically it's from the `dplyr` package) to get information about variable types. 
* `glimpse()` tends to have nicer output for `tibbles` than `str()`
:::
```{r}
library(tidyverse)
glimpse(dds.discr)  # from tidyverse package (dplyr)
```

<!-- ![](/img_slides/dds.discr_glimpse.png){fig-align="center"} -->


## `summary()`

::: {style="font-size: 80%;"}
* We previously used the base R structure command `summary()` to get summary information about variables
:::

```{r}
summary(dds.discr)      # base R
```


## `tbl_summary()`: summary table

::: columns
::: {.column width="50%"}
::: {style="font-size: 80%;"}
* __New:__ Use `tbl_summary()` from the `gtsummary` package to get summary information
:::
```{r}
#| eval: false
# library(gtsummary)
tbl_summary(dds.discr)
```
:::

::: {.column width="50%"}
![](/img_slides/dds.discr_gtsummary.jpg){fig-align="center" height="650"}
:::
:::


# Visualize numerical variables with `ggplot`

::: columns
::: {.column width="40%"}
![[ggplot](https://ggplot2.tidyverse.org/index.html)](/img_slides/ggplotlogo.png){fig-align="center" height="400"}
:::

::: {.column width="60%"}
![[Artwork by @allison_horst](https://allisonhorst.com/)](/img_slides/ggplot2_masterpiece.png){fig-align="center" height="400"}
:::
:::

## What data (variables) are included in the plot below?

![](/img_slides/ggplot_basics_from_ppt_figure_only.png){fig-align="center"}

## Basics of a ggplot

![](/img_slides/ggplot_basics_from_ppt.png){fig-align="center"}


## Grammar of ggplot2

![[Kieran Healy](https://github.com/rstudio-conf-2020/dataviz)](/img_slides/khealy_ggplot1.png){fig-align="center"}


## Histograms

What is being measured on the vertical axes?

::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 7
ggplot(data = dds.discr, 
       aes(x = age)) +
  geom_histogram() 
```
:::
::: {.column width="50%"}

```{r}
#| fig.height: 7
ggplot(data = dds.discr, 
       aes(x = expenditures)) +
  geom_histogram() 
```
:::
:::


## Histograms showing proportions

::: columns
::: {.column width="50%"}

```{r}
#| fig.height: 7
#| code-line-numbers: "4" 
ggplot(data = dds.discr, 
       aes(x = age)) +
  geom_histogram(
    aes(y = stat(density)))  

```
:::
::: {.column width="50%"}

```{r}
#| fig.height: 7
#| code-line-numbers: "4-6"
ggplot(data = dds.discr, 
       aes(x = age)) +
  geom_histogram(
    aes(y = stat(density))) +  
  scale_y_continuous(labels =   
      scales::percent_format())  
```
:::
:::


## Distribution shapes

![](/img_slides/distribution_shapes.png){fig-align="center"}

## Density plots
What is being measured on the vertical axes?

::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 7
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = age)) +
  geom_density() 
```
:::
::: {.column width="50%"}

```{r}
#| fig.height: 7
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = age)) +
  geom_histogram() 
```
:::
:::



## Dot plots 
::: {style="font-size: 80%;"}
* Better for smaller samples
* What is being measured on the vertical axes?
:::

::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 7
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = age)) +
  geom_dotplot(binwidth =1) 
```
:::
::: {.column width="50%"}

```{r}
#| fig.height: 7
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = age)) +
  geom_histogram(binwidth =1) 
```
:::
:::


## Boxplots

::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 5.5
#| fig.width: 5
#| code-line-numbers: "2-3"
ggplot(data = dds.discr, 
       aes(x = age)) + 
  geom_boxplot() 
```
:::
::: {.column width="50%"}

```{r}
#| fig.height: 5.5
#| fig.width: 5
#| code-line-numbers: "2-3"
ggplot(data = dds.discr, 
       aes(y = age)) + 
  geom_boxplot() 
```
:::
:::


## Boxplots: 5 number summary visualization 

<!-- ![](/img_slides/boxplot_no_outliers.png) -->
No outliers:  ![[https://www.simplypsychology.org/boxplots.html](https://www.simplypsychology.org/boxplots.html)](/img_slides/boxplot_no_outliers.png){fig-align="center" height="280"}

With  outliers: ![[https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51](https://towardsdatascience.com/understanding-boxplots-5e2df7bcbd51)](/img_slides/boxplot_w_outliers.png){fig-align="center" height="300"}


# Visualizing relationships between numerical and categorical variables (1.6.3)

## Side-by-side boxplots 

::: columns
::: {.column width="53%"}
```{r}
#| label: "box_sbs"
#| eval: false
#| code-line-numbers: "3-6"
ggplot(data = dds.discr, 
       aes(x = expenditures,
           y = ethnicity)) + 
  geom_boxplot() + 
  labs(x = "Annual Expenditures ($)", 
       y = "Race and ethnicity")  
```

::: {style="font-size: 80%;"}
Can you determine the following using boxplots?

* distribution shape
* sample size
:::
:::

::: {.column width="47%"}
```{r}
#| label: "box_sbs_out"
#| ref.label: "box_sbs"
#| echo: false
#| fig.keep: "first"
#| fig.height: 7
#| fig.width: 7
```
:::
:::


## Side-by-side boxplots with data points

::: columns
::: {.column width="53%"}
```{r}
#| label: "box_sbs_jitter"
#| eval: false
#| code-line-numbers: "4,7-12"
ggplot(data = dds.discr, 
       aes(x = expenditures,
           y = ethnicity)) + 
  geom_boxplot(color="darkgrey") + 
  labs(x = "Annual Expenditures ($)",
       y = "Race and ethnicity") +
  geom_jitter(     
    aes(color = ethnicity),      
    alpha = 0.3,      
    show.legend = FALSE,      
    position = position_jitter(     
      height = 0.4))      
```

::: {style="font-size: 80%;"}
Can you determine the following using boxplots?

* distribution shape
* sample size
:::

:::
::: {.column width="47%"}
```{r}
#| label: "box_sbs_jitter_out"
#| ref.label: "box_sbs_jitter"
#| echo: false
#| fig.keep: "first"
#| fig.height: 7
#| fig.width: 7
```
:::
:::


## Density plots by group

```{r}
#| fig.height: 5
#| fig.width: 10
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = expenditures,
           color = ethnicity)) + 
  geom_density() + 
  labs(x = "Annual Expenditures ($)")  
```


## Ridgeline plot 

::: columns
::: {.column width="53%"}
```{r}
#| label: "density_ridge"
#| eval: false
#| code-line-numbers: "4-5,7-9,12-14"
# library(ggridges)
ggplot(data = dds.discr,
       aes(x = expenditures,
           y = ethnicity,      
           fill = ethnicity)      
       ) + 
  geom_density_ridges(      
    alpha = 0.3,      
    show.legend = FALSE) +      
  labs(x = "Annual Expenditures ($)",
       y = "Race and ethnicity",
       title =        
"Expenditures by race and 
       \nethnicity")       
```
:::
::: {.column width="47%"}
```{r}
#| label: "density_ridge_out"
#| ref.label: "density_ridge"
#| echo: false
#| fig.keep: "first"
#| fig.height: 7
#| fig.width: 7
```
:::
:::


## Transforming data (1.4.5)

::: {style="font-size: 80%;"}
* We sometimes apply a transformation to highly skewed data to make it more symmetric
* Log transformations are often used for skewed right data
:::

::: columns
::: {.column width="50%"}
`x = expenditures`
```{r}
#| fig.height: 5
#| code-line-numbers: "2"
ggplot(data = dds.discr, 
       aes(x = expenditures)) +  
  geom_density() 
```
:::

::: {.column width="50%"}
`x = log(expenditures)`
```{r}
#| fig.height: 5
#| code-line-numbers: "2"
ggplot(data = dds.discr, 
       aes(x = log(expenditures))) +  
  geom_density() 
```

:::
:::


# Relationships between two numerical variables (1.6.1)

## Scatterplots

::: columns
::: {.column width="55%"}
```{r}
#| label: "scatter"
#| eval: false
#| code-line-numbers: "4"
ggplot(data = dds.discr, 
       aes(x = age,
           y = expenditures)) + 
  geom_point() +       
  labs(x = "Age",
       y = "Annual Expenditures ($)") 
```

::: {style="font-size: 80%;"}
Response vs. explanatory variables (Section 1.2.3)

- A **response variable** measures the outcome of interest in a study
- A study will typically examine whether the values of a response variable differ as values of an **explanatory variable** change

:::

:::
::: {.column width="45%"}
```{r}
#| label: "scatter_out"
#| ref.label: "scatter"
#| echo: false
#| fig.keep: "first"
#| fig.height: 5
#| fig.width: 6
```
:::
:::

::: {style="font-size: 80%;"}
Describe the association between the variables
:::

## Describing associations between 2 numerical variables

::: columns
::: {.column width="50%"}

::: {style="font-size: 80%;"}
Two variables $x$ and $y$ are 

- **positively associated** if $y$ increases as $x$ increases. 

- **negatively associated** if $y$ decreases as $x$ increases.

- If there is no association between the variables, then we say they are **uncorrelated** or **independent**.

:::
:::

::: {.column width="50%"}
```{r}
#| label: "scatter_out2"
#| ref.label: "scatter"
#| echo: false
#| fig.keep: "first"
#| fig.height: 5
#| fig.width: 6
```
:::
:::

::: {style="font-size: 80%;"}
* The term "association" is a very general term.
  * Can be used for numerical or categorical variables
  * Not specifically referring to linear associations
:::


## (Pearson) Correlation coefficient $r$

::: {style="font-size: 70%;"}
* $r = -1$ indicates a __perfect negative linear relationship__: As one variable increases, the value of the other variable tends to go down, following a *straight line*.
* $r = 0$ indicates __no linear relationship__: The values of both variables go up/down independently of each other.
* $r = 1$ indicates a __perfect positive linear relationship__: As the value of one variable goes up, the value of the other variable tends to go up as well in a linear fashion.

* The closer $r$ is to ±1, the stronger the linear association.
:::

![](/img_slides/MD_correlation1-1.png){fig-align="center"}



## (Pearson) Correlation coefficient (r): formula

::: {style="font-size: 80%;"}
The (Peasron) correlation coefficient of variables $x$ and $y$ can be computed using the formula
$$r = \frac{1}{n-1}\sum_{i=1}^{n}\Big(\frac{x_i - \bar{x}}{s_x}\Big)\Big(\frac{y_i - \bar{y}}{s_y}\Big)$$
where 

* $(x_1,y_1),(x_2,y_2),...,(x_n,y_n)$ are the $n$ paired values of the variables $x$ and $y$ 
* $s_x$ and $s_y$ are the sample standard deviations of the variables $x$ and $y$, respectively
:::

```{r}
cor(dds.discr$age, dds.discr$expenditures)
```




## Guess the correlation game!

::: {style="font-size: 80%;"}
::: columns
::: {.column width="50%"}
Rossman & Chance's applet

![](/img_slides/screenshot_guess_corr_iscam.png){fig-align="center"}

Tracks performance of guess vs. actual, error vs. actual, and error vs. trial

[http://www.rossmanchance.com/applets/GuessCorrelation.html](http://www.rossmanchance.com/applets/GuessCorrelation.html)
:::

::: {.column width="50%"}


Or, for the Atari-like experience


![[http://guessthecorrelation.com/](http://guessthecorrelation.com/)](/img_slides/screenshot_guess_corr_atari.png){fig-align="center"}

:::
:::

:::


## Scatterplots with color-coded dots 

Describe the association between the variables

```{r}
#| code-line-numbers: "4-5,8"
#| fig.height: 6
#| fig.width: 12
ggplot(data = dds.discr, 
       aes(x = age, y = expenditures,
           color = ethnicity)) +   
  geom_point(alpha = .5) +       
  labs(x = "Age", y = "Annual Expenditures ($)") +
  theme(legend.position = "bottom")
```


# Categorical data (1.5) and Relationships between two categorical variables (1.6.2)

## Barplots

::: columns
::: {.column width="50%"}
::: {style="font-size: 80%;"}
Counts (below) vs.  
percentages (right)
:::
```{r}
#| fig.height: 5
#| fig.width: 6
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = ethnicity)) +
  geom_bar() 
```
:::

::: {.column width="50%"}

```{r}
#| fig.height: 5
#| fig.width: 6
#| code-line-numbers: "3-6"
ggplot(data = dds.discr, 
       aes(x = ethnicity)) +
  geom_bar(aes(y = stat(prop),  
               group = 1)) + 
  scale_y_continuous(labels =  
      scales::percent_format())  
```
:::
:::


## Barplots with 2 variables: segmented bar plots

::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 5.5
#| fig.width: 6
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = ethnicity,
           fill = age.cohort)) + 
  geom_bar() 
```
:::
::: {.column width="50%"}

```{r}
#| fig.height: 5.5
#| fig.width: 6
#| code-line-numbers: "3-4"
ggplot(data = dds.discr, 
       aes(x = ethnicity,
           fill = age.cohort)) + 
  geom_bar(position = "fill")  
```
:::
:::


## Barplots with 2 variables: side-by-side bar plots

```{r}
#| fig.height: 5
#| fig.width: 12
#| code-line-numbers: "3-4"
ggplot(data = dds.discr, 
       aes(x = ethnicity,
           fill = age.cohort)) + 
  geom_bar(position = "dodge") 
```


# Summarizing categorical data and some data wrangling

<!-- ::: {layout-ncol=3} -->
::: columns
::: {.column width="33%"}
![[dplyr](https://dplyr.tidyverse.org/)](/img_slides/hex-dplyr.png){fig-align="center" height="300"}
:::
::: {.column width="33%"}
![[magrittr](https://magrittr.tidyverse.org/)](/img_slides/magrittr.png){fig-align="center" height="300"}
:::
::: {.column width="33%"}
![[janitor](https://cran.r-project.org/web/packages/janitor/readme/README.html)](/img_slides/janitor_logo_small.png){fig-align="center" height="300"}
:::
:::

## Frequency tables: `count()`

::: columns
::: {.column width="50%"}
::: {style="font-size: 80%;"}
* `count` is from the `dplyr` package
* the output is a long tibble, and not a "nice" table
:::
```{r}
dds.discr %>% count(ethnicity)
```
:::
::: {.column width="50%"}
```{r}
dds.discr %>% 
  count(ethnicity, age.cohort)
```
:::
:::

## How to use the pipe `%>%`

::: {style="font-size: 80%;"}
The pipe operator `%>%` strings together commands to be performed sequentially
:::

```{r}
dds.discr %>% head(n=3)      # pronounce %>% as "then"
```

::: {style="font-size: 80%;"}
- Always _first list the tibble_ that the commands are being applied to
- Can use __multiple pipes__ to run multiple commands in sequence
    + What does the following code do?
:::
```{r}
#| eval: false
dds.discr %>% head(n=3) %>% summary()
```

## Frequency tables: `janitor` package's `tabyl` function 

::: columns
::: {.column width="50%"}

```{r}
#| code-line-numbers: "3"
# default table
dds.discr %>% 
  tabyl(ethnicity)  
```

:::
::: {.column width="50%"}

`adorn_` your table!
```{r}
#| code-line-numbers: "3-4"
dds.discr %>% 
  tabyl(ethnicity) %>%
  adorn_totals("row") %>% 
  adorn_pct_formatting(digits=2)  
```

:::
:::


## Relative frequency table

::: columns
::: {.column width="40%"}

::: {style="font-size: 80%;"}
* A __relative frequency__ table shows __proportions (or percentages)__ instead of counts

* To the right I removed (deselected) the counts column (`n`) to create a relative frequency table 
:::
:::

::: {.column width="60%"}

```{r}
#| code-line-numbers: "4-5"
dds.discr %>% 
  tabyl(ethnicity) %>%
  adorn_totals("row") %>% 
  adorn_pct_formatting(digits=2) %>%   
  select(-n) 
```

:::
:::



## Contingency tables (two-way tables)

::: columns
::: {.column width="40%"}
::: {style="font-size: 80%;"}
* **Contingency tables** summarize data for two categorical variables
  * with each value in the table representing the number of times  
  a particular combination of outcomes occurs

* **Row & column totals**   
are sometimes called **marginal totals** 
:::

:::
::: {.column width="60%"}

```{r}
#| code-line-numbers: "2-3"
dds.discr %>% 
  tabyl(ethnicity, gender) %>%    
  adorn_totals(c("row", "col"))    
```

:::
:::

## Contingency tables with percentages

```{r}
#| code-line-numbers: "4-6"
dds.discr %>% 
  tabyl(ethnicity, age.cohort) %>%
  adorn_totals(c("row")) %>%
  adorn_percentages("row") %>%   
  adorn_pct_formatting(digits=0) %>%    
  adorn_ns()    
```


# Summarizing numeric data


## Mean annual DDS expenditures by race/ethnicity

::: columns
::: {.column width="45%"}
```{r}
mean(dds.discr$expenditures)

dds.discr %>% 
  summarize(
    ave = mean(expenditures),
    SD = sd(expenditures),
    med = median(expenditures))
```
:::

::: {.column width="55%"}
```{r}
#| code-line-numbers: "2"
dds.discr %>% 
  group_by(ethnicity) %>% 
  summarize(
    ave = mean(expenditures),
    SD = sd(expenditures),
    med = median(expenditures))
```

:::
:::

## `get_summary_stats()` from `rstatix` package

```{r}
dds.discr %>% get_summary_stats()

dds.discr %>% 
  group_by(ethnicity) %>%
  get_summary_stats(expenditures, type = "common")
```

## How to force all output to be shown? (1/2) 

Use `kable()` from the `knitr` package.

```{r}
dds.discr %>% get_summary_stats() %>% kable()
```

## How to force all output to be shown? `knitr` (2/2) 

Use `kable()` from the `knitr` package.

```{r}
dds.discr %>% 
  group_by(ethnicity) %>%
  get_summary_stats(expenditures, type = "common") %>% 
  kable()
```



# Back to research question


## Case study: discrimination in developmental disability support (1.7.1)

* __Previous research__
  * Researchers examined DDS expenditures for developmentally disabled residents by ethnicity
  * Found that the mean annual expenditures on Hispanics was less than that on White non-Hispanics. 
* __Result__: an allegation of ethnic discrimination was brought against the California DDS.
* __Question: Are the data sufficient evidence of ethnic discrimination?__


