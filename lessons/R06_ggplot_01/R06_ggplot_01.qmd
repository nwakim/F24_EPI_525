---
title: "R06: `ggplot2`, Part 1"
author: "Meike Niederhausen and Nicky Wakim"
title-slide-attributes:
    data-background-color: "#3070BF"
date: "10/16/2024"
format: 
  revealjs:
    theme: "../simple_NW.scss"
    chalkboard: true
    slide-number: true
    show-slide-number: all
    width: 1955
    height: 1100
    footer: R06 Slides
    html-math-method: mathjax
    highlight-style: arrow
execute:
  echo: true
  freeze: auto
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: "setup" 
#| include: false
#| message: false
#| warning: false

library(tidyverse)
library(lubridate)
library(janitor)
library(here)

# terminal: for icons
# quarto install extension quarto-ext/fontawesome

# set ggplot theme for slides 
theme_set(theme_bw(base_size = 22))
# theme_update(text = element_text(size=20))  # set global text size for ggplots
```

## From last time: R Packages

A good analogy for R packages is that they are like apps you can download onto a mobile phone:

![[ModernDive Figure 1.4](https://moderndive.netlify.com/1-getting-started.html#packages)](../img_slides/R_vs_R_packages.png){fig-align="center"}

## From last time: Install the packages listed below

::::: columns
::: column
-   `knitr`
    -   this might actually already be installed
    -   check your packages list
-   `tidyverse`
    -   this is actually a bundle of packages
    -   *Warning: it will take a while to install!!!*
    -   see more info at <https://tidyverse.tidyverse.org/>
-   `rstatix`
    -   for summary statistics of a dataset
-   `janitor`
    -   for cleaning and exploring data
:::

::: column
-   `ggridges`
    -   for creating ridgeline plots
-   `devtools`
    -   used to create R packages
    -   for our purposes, needed to install some packages
-   `oi_biostat_data`
    -   this package is on github
    -   **see the next slide for directions on how to install `oi_biostat_data`**
-   `here`
    -   More info in slides ahead
:::
:::::

## From last time: Load packages with `library()` command

-   Tip: **at the top of your Qmd file,** create a chunk that loads all of the R packages you want to use in that file.

-   Use the `library()` command to load each required package.

    -   Packages need to be reloaded *every* time you open Rstudio.
    -   `library()` commands to load needed packages *must* be in the Qmd file

```{r}
# run these every time you open Rstudio
library(tidyverse) # contains ggplot2    
library(oibiostat)
library(ggridges)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary) # NEW!!
```

-   You can check whether a package has been loaded or not
    -   by looking at the Packages tab and
    -   seeing whether it has been checked off or not

## Introduction to `ggplot2`

![[Artwork by \@allison_horst](https://allisonhorst.com/)](../img_slides/horst_ggplot2_exploratory.png){fig-align="center"}

## `ggplot2` in tidyverse

::: columns
::: {.column width="40%"}
![](../img_slides/ggplot2-part-of-tidyverse.png)
:::

::: {.column width="60%"}
-   We talked about this in our review notes

    -   I want to revisit it: always helps to have more examples!
    -   This example is closer to the multivariable work we'll do in this class!

 

-   **ggplot2** is tidyverse's data visualization package

 

-   The `gg` in "ggplot2" stands for Grammar of Graphics

 

-   It is inspired by the book **Grammar of Graphics** by Leland Wilkinson
:::
:::


```{css, echo=FALSE}
.reveal code {
  max-height: 100% !important;
}
```

## Case Study Description

-   In the US, individuals with developmental disabilities typically receive services and support from state governments.

    -   California allocates funds to developmentally disabled residents through the *Department of Developmental Services (DDS)*
    -   Recipients of DDS funds are referred to as "consumers."

 

-   Dataset `dds.discr`

    -   Sample of 1,000 DDS consumers (out of a total of \~ 250,000)
    -   Data include [age, sex assigned at birth, race/ethnicity, and annual DDS financial support per consumer]{style="color:#C83532"}

 

- For now, we are going to explore these data with `R`

-   See Section 1.7.1 in the textbook for more details

## Load `dds.discr` dataset from `oibiostat` package

-   The textbook's datasets are in the R package `oibiostat`

-   Make sure the `oibiostat` package is installed before running the code below.

-   Load the `oibiostat` package and the dataset `dds.discr`

 

[**The code below needs to be run *every time* you restart R or render a Qmd file:**]{style="color:#BF396F"}

```{r}
library(oibiostat)
data("dds.discr")
```

 

-   After loading the dataset `dds.discr` using `data("dds.discr")`, you will see `dds.discr` in the Data list of the Environment window.

## `glimpse()`

-   We previously used the base R structure command `str()` to get information about variable types in a dataset (in R03: R basics part 2)
-   Use `glimpse()` from the `tidyverse` package (technically it's from the `dplyr` package) to get information about variable types.
-   `glimpse()` tends to have nicer output for `tibbles` than `str()`

```{r}
library(tidyverse)
glimpse(dds.discr)  # from tidyverse package (dplyr)
```

## Some things to note on this dataset

```{r}
glimpse(dds.discr)  # from tidyverse package (dplyr)
```

- This happens in older datasets (and honestly some newer ones): gender and sex get conflated
  - I try to catch these issues before sharing datasets with you, but when we load datasets directly from the `oibiostat` package, I can't make these changes
  - If you are unfamiliar with the differences, please see [this NIH site on sex and gender](https://orwh.od.nih.gov/sex-gender)
- Also, race and ethnicity can be mislabeled
  - "White not hispanic" combines race and ethnicity
  - If you are unfamiliar with the differences, please see [this APA site on race and ethnicity](https://www.apa.org/topics/race-ethnicity)

## `rename()`: one of the first things I usually do

- I want to rename the variable, gender, to sex and rename ethnicity to r_e (race and ethnicity)

 

```{r}
dds.discr1 = dds.discr %>% 
  rename(sex_MF = gender, 
         r_e = ethnicity)

glimpse(dds.discr1)
```

# Visualize numerical variables with `ggplot2`

::::: columns
::: {.column width="40%"}
![[ggplot](https://ggplot2.tidyverse.org/index.html)](../img_slides/ggplotlogo.png){fig-align="center" height="400"}
:::

::: {.column width="60%"}
![[Artwork by \@allison_horst](https://allisonhorst.com/)](../img_slides/ggplot2_masterpiece.png){fig-align="center" height="400"}
:::
:::::

## Basics of a ggplot

![](../img_slides/ggplot_basics_from_ppt.png){fig-align="center"}

## Grammar of ggplot2

![[Kieran Healy](https://github.com/rstudio-conf-2020/dataviz)](../img_slides/khealy_ggplot1.png){fig-align="center"}

## Histograms

What is being measured on the vertical axes?

::::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 7
ggplot(data = dds.discr1, 
       aes(x = age)) +
  geom_histogram() 
```
:::

::: {.column width="50%"}
```{r}
#| fig.height: 7
ggplot(data = dds.discr1, 
       aes(x = expenditures)) +
  geom_histogram() 
```
:::
:::::

## Histograms showing proportions

::::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 7
#| code-line-numbers: "4" 
ggplot(data = dds.discr1, 
       aes(x = age)) +
  geom_histogram(
    aes(y = stat(density)))  

```
:::

::: {.column width="50%"}
```{r}
#| fig.height: 7
#| code-line-numbers: "4-6"
ggplot(data = dds.discr1, 
       aes(x = age)) +
  geom_histogram(
    aes(y = stat(density))) +  
  scale_y_continuous(labels =   
      scales::percent_format())  
```
:::
:::::

## Density plots {visibility="hidden"}

What is being measured on the vertical axes?

::::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 7
#| code-line-numbers: "3"
ggplot(data = dds.discr1, 
       aes(x = age)) +
  geom_density() 
```
:::

::: {.column width="50%"}
```{r}
#| fig.height: 7
#| code-line-numbers: "3"
ggplot(data = dds.discr1, 
       aes(x = age)) +
  geom_histogram() 
```
:::
:::::

## Boxplots

::::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 5.5
#| fig.width: 5
#| code-line-numbers: "2-3"
ggplot(data = dds.discr1, 
       aes(x = age)) + 
  geom_boxplot() 
```
:::

::: {.column width="50%"}
```{r}
#| fig.height: 5.5
#| fig.width: 5
#| code-line-numbers: "2-3"
ggplot(data = dds.discr1, 
       aes(y = age)) + 
  geom_boxplot() 
```
:::
:::::

# Categorical data

## Barplots

::::: columns
::: {.column width="50%"}
Counts (below) vs.\
percentages (right)

```{r}
#| fig.height: 5
#| fig.width: 6
#| code-line-numbers: "3"
ggplot(data = dds.discr1, 
       aes(x = r_e)) +
  geom_bar() 
```
:::

::: {.column width="50%"}
```{r}
#| fig.height: 5
#| fig.width: 6
#| code-line-numbers: "3-6"
ggplot(data = dds.discr1, 
       aes(x = r_e)) +
  geom_bar(aes(y = stat(prop),  
               group = 1)) + 
  scale_y_continuous(labels =  
      scales::percent_format())  
```
:::
:::::


## Adding more to plots!

Tilt text so we can read it!
```{r}
#| fig.height: 8
#| fig.width: 14
#| code-line-numbers: "3"
ggplot(data = dds.discr1, aes(x = r_e)) +
  geom_bar(aes(y = stat(prop), group = 1)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  
```

## Adding more to plots!

We can change labels!
```{r}
#| fig.height: 8
#| fig.width: 14
#| code-line-numbers: "4-5"
ggplot(data = dds.discr1, aes(x = r_e)) +
  geom_bar(aes(y = stat(prop), group = 1)) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x = "Race and ethnicity", y = "Proportion", 
       title = "Proportion of individuals receiving DDS by race and ethnicity")
```

## Adding more to plots!

Increase text size so we can read it!
```{r}
#| fig.height: 8
#| fig.width: 14
#| code-line-numbers: "3-5"
ggplot(data = dds.discr1, aes(x = r_e)) +
  geom_bar(aes(y = stat(prop), group = 1)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 35),
        axis.title = element_text(size = 35))
```


