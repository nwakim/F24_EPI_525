---
title: "R06: `ggplot2`, Part 1"
author: "Meike Niederhausen and Nicky Wakim"
title-slide-attributes:
    data-background-color: "#3070BF"
date: "10/16/2024"
format: 
  revealjs:
    theme: "../simple_NW.scss"
    chalkboard: true
    slide-number: true
    show-slide-number: all
    width: 1955
    height: 1100
    footer: R06 Slides
    html-math-method: mathjax
    highlight-style: arrow
execute:
  echo: true
  freeze: auto
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: "setup" 
#| include: false
#| message: false
#| warning: false

library(tidyverse)
library(lubridate)
library(janitor)
library(here)

# terminal: for icons
# quarto install extension quarto-ext/fontawesome

# set ggplot theme for slides 
theme_set(theme_bw(base_size = 22))
# theme_update(text = element_text(size=20))  # set global text size for ggplots
```

```{css, echo=FALSE}
.reveal code {
  max-height: 100% !important;
}
```

## Goals for today

::::: columns
::: {.column width="50%"}
-   **Exploratory Data Analysis (EDA)** (Sections 1.4, 1.5, 1.6, 1.7.1)
    -   Data visualization with ggplot
        -   numerical & categorical variables, and relationships between variables
    -   Summarizing numerical data
    -   Frequency (two-way) tables
-   Some **data wrangling** techniques along the way
:::

::: {.column width="50%"}
![[Artwork by \@allison_horst](https://allisonhorst.com/)](../img_slides/horst_ggplot2_exploratory.png){fig-align="center"}
:::
:::::

# R Packages

A good analogy for R packages is that they are like apps you can download onto a mobile phone:

![[ModernDive Figure 1.4](https://moderndive.netlify.com/1-getting-started.html#packages)](../img_slides/R_vs_R_packages.png){fig-align="center"}

## From last time: Install the packages listed below

::::: columns
::: column
-   `knitr`
    -   this might actually already be installed
    -   check your packages list
-   `tidyverse`
    -   this is actually a bundle of packages
    -   *Warning: it will take a while to install!!!*
    -   see more info at <https://tidyverse.tidyverse.org/>
-   `rstatix`
    -   for summary statistics of a dataset
-   `janitor`
    -   for cleaning and exploring data
:::

::: column
-   `ggridges`
    -   for creating ridgeline plots
-   `devtools`
    -   used to create R packages
    -   for our purposes, needed to install some packages
-   `oi_biostat_data`
    -   this package is on github
    -   **see the next slide for directions on how to install `oi_biostat_data`**
-   `here`
    -   More info in slides ahead
:::
:::::

## Load packages with `library()` command

-   Tip: **at the top of your Qmd file,** create a chunk that loads all of the R packages you want to use in that file.

-   Use the `library()` command to load each required package.

    -   Packages need to be reloaded *every* time you open Rstudio.
    -   `library()` commands to load needed packages *must* be in the Qmd file

```{r}
# run these every time you open Rstudio
library(tidyverse) # contains ggplot2    
library(oibiostat)
library(ggridges)
library(janitor)
library(rstatix)
library(knitr)
library(gtsummary) # NEW!!
```

-   You can check whether a package has been loaded or not
    -   by looking at the Packages tab and
    -   seeing whether it has been checked off or not

# Case study: discrimination in developmental disability support (Section 1.7.1)

## Case Study Description

-   In the US, individuals with developmental disabilities typically receive services and support from state governments.

    -   California allocates funds to developmentally disabled residents through the *Department of Developmental Services (DDS)*
    -   Recipients of DDS funds are referred to as "consumers."

-   Dataset `dds.discr`

    -   sample of 1,000 DDS consumers (out of a total of \~ 250,000)
    -   data include [**age, gender, race/ethnicity, and annual DDS financial support per consumer**]{style="color:green"}

-   **Previous research**

    -   Researchers examined expenditures on consumers by ethnicity
    -   Found that the mean annual expenditure on Hispanics was less than that on White non-Hispanics.

-   Result: an allegation of ethnic discrimination was brought against the California DDS.

-   **Question: Are the data sufficient evidence of ethnic discrimination?**

-   See Section 1.7.1 in the textbook for more details

## Load `dds.discr` dataset from `oibiostat` package

-   The textbook's datasets are in the R package `oibiostat`

-   Make sure the `oibiostat` package is installed before running the code below.

-   Load the `oibiostat` package and the dataset `dds.discr`

[**the code below needs to be run *every time* you restart R or render a Qmd file**]{style="color:darkorange"}

```{r}
library(oibiostat)
data("dds.discr")
```

-   After loading the dataset `dds.discr` using `data("dds.discr")`, you will see `dds.discr` in the Data list of the Environment window.

# Visualizing relationships between numerical and categorical variables (1.6.3)

## Side-by-side boxplots

::::: columns
::: {.column width="53%"}
```{r}
#| label: "box_sbs"
#| eval: false
#| code-line-numbers: "3-6"
ggplot(data = dds.discr, 
       aes(x = expenditures,
           y = ethnicity)) + 
  geom_boxplot() + 
  labs(x = "Annual Expenditures ($)", 
       y = "Race and ethnicity")  
```

Can you determine the following using boxplots?

-   distribution shape
-   sample size
:::

::: {.column width="47%"}
```{r}
#| label: "box_sbs_out"
#| ref.label: "box_sbs"
#| echo: false
#| fig.keep: "first"
#| fig.height: 7
#| fig.width: 7
```
:::
:::::

## Side-by-side boxplots with data points

::::: columns
::: {.column width="53%"}
```{r}
#| label: "box_sbs_jitter"
#| eval: false
#| code-line-numbers: "4,7-12"
ggplot(data = dds.discr, 
       aes(x = expenditures,
           y = ethnicity)) + 
  geom_boxplot(color="darkgrey") + 
  labs(x = "Annual Expenditures ($)",
       y = "Race and ethnicity") +
  geom_jitter(     
    aes(color = ethnicity),      
    alpha = 0.3,      
    show.legend = FALSE,      
    position = position_jitter(     
      height = 0.4))      
```

Can you determine the following using boxplots?

-   distribution shape
-   sample size
:::

::: {.column width="47%"}
```{r}
#| label: "box_sbs_jitter_out"
#| ref.label: "box_sbs_jitter"
#| echo: false
#| fig.keep: "first"
#| fig.height: 7
#| fig.width: 7
```
:::
:::::

## Density plots by group

```{r}
#| fig.height: 5
#| fig.width: 10
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = expenditures,
           color = ethnicity)) + 
  geom_density() + 
  labs(x = "Annual Expenditures ($)")  
```

## Ridgeline plot

::::: columns
::: {.column width="53%"}
```{r}
#| label: "density_ridge"
#| eval: false
#| code-line-numbers: "4-5,7-9,12-14"
# library(ggridges)
ggplot(data = dds.discr,
       aes(x = expenditures,
           y = ethnicity,      
           fill = ethnicity)      
       ) + 
  geom_density_ridges(      
    alpha = 0.3,      
    show.legend = FALSE) +      
  labs(x = "Annual Expenditures ($)",
       y = "Race and ethnicity",
       title =        
"Expenditures by race and 
       \nethnicity")       
```
:::

::: {.column width="47%"}
```{r}
#| label: "density_ridge_out"
#| ref.label: "density_ridge"
#| echo: false
#| fig.keep: "first"
#| fig.height: 7
#| fig.width: 7
```
:::
:::::

## Transforming data (1.4.5)

-   We sometimes apply a transformation to highly skewed data to make it more symmetric
-   Log transformations are often used for skewed right data

::::: columns
::: {.column width="50%"}
`x = expenditures`

```{r}
#| fig.height: 5
#| code-line-numbers: "2"
ggplot(data = dds.discr, 
       aes(x = expenditures)) +  
  geom_density() 
```
:::

::: {.column width="50%"}
`x = log(expenditures)`

```{r}
#| fig.height: 5
#| code-line-numbers: "2"
ggplot(data = dds.discr, 
       aes(x = log(expenditures))) +  
  geom_density() 
```
:::
:::::

# Relationships between two numerical variables (1.6.1)

## Scatterplots

::::: columns
::: {.column width="55%"}
```{r}
#| label: "scatter"
#| eval: false
#| code-line-numbers: "4"
ggplot(data = dds.discr, 
       aes(x = age,
           y = expenditures)) + 
  geom_point() +       
  labs(x = "Age",
       y = "Annual Expenditures ($)") 
```

Response vs. explanatory variables (Section 1.2.3)

-   A **response variable** measures the outcome of interest in a study
-   A study will typically examine whether the values of a response variable differ as values of an **explanatory variable** change
:::

::: {.column width="45%"}
```{r}
#| label: "scatter_out"
#| ref.label: "scatter"
#| echo: false
#| fig.keep: "first"
#| fig.height: 5
#| fig.width: 6
```
:::
:::::

Describe the association between the variables

## Describing associations between 2 numerical variables

::::: columns
::: {.column width="50%"}
Two variables $x$ and $y$ are

-   **positively associated** if $y$ increases as $x$ increases.

-   **negatively associated** if $y$ decreases as $x$ increases.

-   If there is no association between the variables, then we say they are **uncorrelated** or **independent**.
:::

::: {.column width="50%"}
```{r}
#| label: "scatter_out2"
#| ref.label: "scatter"
#| echo: false
#| fig.keep: "first"
#| fig.height: 5
#| fig.width: 6
```
:::
:::::

-   The term "association" is a very general term.
    -   Can be used for numerical or categorical variables
    -   Not specifically referring to linear associations

## (Pearson) Correlation coefficient $r$

-   $r = -1$ indicates a **perfect negative linear relationship**: As one variable increases, the value of the other variable tends to go down, following a *straight line*.

-   $r = 0$ indicates **no linear relationship**: The values of both variables go up/down independently of each other.

-   $r = 1$ indicates a **perfect positive linear relationship**: As the value of one variable goes up, the value of the other variable tends to go up as well in a linear fashion.

-   The closer $r$ is to ±1, the stronger the linear association.

![](../img_slides/MD_correlation1-1.png){fig-align="center"}

## (Pearson) Correlation coefficient (r): formula

The (Peasron) correlation coefficient of variables $x$ and $y$ can be computed using the formula $$r = \frac{1}{n-1}\sum_{i=1}^{n}\Big(\frac{x_i - \bar{x}}{s_x}\Big)\Big(\frac{y_i - \bar{y}}{s_y}\Big)$$ where

-   $(x_1,y_1),(x_2,y_2),...,(x_n,y_n)$ are the $n$ paired values of the variables $x$ and $y$
-   $s_x$ and $s_y$ are the sample standard deviations of the variables $x$ and $y$, respectively

```{r}
cor(dds.discr$age, dds.discr$expenditures)
```

## Guess the correlation game!

::::: columns
::: {.column width="50%"}
Rossman & Chance's applet

![](../img_slides/screenshot_guess_corr_iscam.png){fig-align="center"}

Tracks performance of guess vs. actual, error vs. actual, and error vs. trial

<http://www.rossmanchance.com/applets/GuessCorrelation.html>
:::

::: {.column width="50%"}
Or, for the Atari-like experience

![<http://guessthecorrelation.com/>](../img_slides/screenshot_guess_corr_atari.png){fig-align="center"}
:::
:::::

## Scatterplots with color-coded dots

Describe the association between the variables

```{r}
#| code-line-numbers: "4-5,8"
#| fig.height: 6
#| fig.width: 12
ggplot(data = dds.discr, 
       aes(x = age, y = expenditures,
           color = ethnicity)) +   
  geom_point(alpha = .5) +       
  labs(x = "Age", y = "Annual Expenditures ($)") +
  theme(legend.position = "bottom")
```

# Categorical data (1.5) and Relationships between two categorical variables (1.6.2)

## Barplots

::::: columns
::: {.column width="50%"}
Counts (below) vs.\
percentages (right)

```{r}
#| fig.height: 5
#| fig.width: 6
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = ethnicity)) +
  geom_bar() 
```
:::

::: {.column width="50%"}
```{r}
#| fig.height: 5
#| fig.width: 6
#| code-line-numbers: "3-6"
ggplot(data = dds.discr, 
       aes(x = ethnicity)) +
  geom_bar(aes(y = stat(prop),  
               group = 1)) + 
  scale_y_continuous(labels =  
      scales::percent_format())  
```
:::
:::::

## Barplots with 2 variables: segmented bar plots

::::: columns
::: {.column width="50%"}
```{r}
#| fig.height: 5.5
#| fig.width: 6
#| code-line-numbers: "3"
ggplot(data = dds.discr, 
       aes(x = ethnicity,
           fill = age.cohort)) + 
  geom_bar() 
```
:::

::: {.column width="50%"}
```{r}
#| fig.height: 5.5
#| fig.width: 6
#| code-line-numbers: "3-4"
ggplot(data = dds.discr, 
       aes(x = ethnicity,
           fill = age.cohort)) + 
  geom_bar(position = "fill")  
```
:::
:::::

## Barplots with 2 variables: side-by-side bar plots

```{r}
#| fig.height: 5
#| fig.width: 12
#| code-line-numbers: "3-4"
ggplot(data = dds.discr, 
       aes(x = ethnicity,
           fill = age.cohort)) + 
  geom_bar(position = "dodge") 
```

# Summarizing categorical data and some data wrangling

<!-- ::: {layout-ncol=3} -->

:::::: columns
::: {.column width="33%"}
![[dplyr](https://dplyr.tidyverse.org/)](../img_slides/hex-dplyr.png){fig-align="center" height="300"}
:::

::: {.column width="33%"}
![[magrittr](https://magrittr.tidyverse.org/)](../img_slides/magrittr.png){fig-align="center" height="300"}
:::

::: {.column width="33%"}
![[janitor](https://cran.r-project.org/web/packages/janitor/readme/README.html)](../img_slides/janitor_logo_small.png){fig-align="center" height="300"}
:::
::::::

## Frequency tables: `count()`

::::: columns
::: {.column width="50%"}
-   `count` is from the `dplyr` package
-   the output is a long tibble, and not a "nice" table

```{r}
dds.discr %>% count(ethnicity)
```
:::

::: {.column width="50%"}
```{r}
dds.discr %>% 
  count(ethnicity, age.cohort)
```
:::
:::::

## How to use the pipe `%>%`

The pipe operator `%>%` strings together commands to be performed sequentially

```{r}
dds.discr %>% head(n=3)      # pronounce %>% as "then"
```

-   Always *first list the tibble* that the commands are being applied to
-   Can use **multiple pipes** to run multiple commands in sequence
    -   What does the following code do?

```{r}
#| eval: false
dds.discr %>% head(n=3) %>% summary()
```

## Frequency tables: `janitor` package's `tabyl` function

::::: columns
::: {.column width="50%"}
```{r}
#| code-line-numbers: "3"
# default table
dds.discr %>% 
  tabyl(ethnicity)  
```
:::

::: {.column width="50%"}
`adorn_` your table!

```{r}
#| code-line-numbers: "3-4"
dds.discr %>% 
  tabyl(ethnicity) %>%
  adorn_totals("row") %>% 
  adorn_pct_formatting(digits=2)  
```
:::
:::::

## Relative frequency table

::::: columns
::: {.column width="40%"}
-   A **relative frequency** table shows **proportions (or percentages)** instead of counts

-   To the right I removed (deselected) the counts column (`n`) to create a relative frequency table
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "4-5"
dds.discr %>% 
  tabyl(ethnicity) %>%
  adorn_totals("row") %>% 
  adorn_pct_formatting(digits=2) %>%   
  select(-n) 
```
:::
:::::

## Contingency tables (two-way tables)

::::: columns
::: {.column width="40%"}
-   **Contingency tables** summarize data for two categorical variables
    -   with each value in the table representing the number of times\
        a particular combination of outcomes occurs
-   **Row & column totals**\
    are sometimes called **marginal totals**
:::

::: {.column width="60%"}
```{r}
#| code-line-numbers: "2-3"
dds.discr %>% 
  tabyl(ethnicity, gender) %>%    
  adorn_totals(c("row", "col"))    
```
:::
:::::

## Contingency tables with percentages

```{r}
#| code-line-numbers: "4-6"
dds.discr %>% 
  tabyl(ethnicity, age.cohort) %>%
  adorn_totals(c("row")) %>%
  adorn_percentages("row") %>%   
  adorn_pct_formatting(digits=0) %>%    
  adorn_ns()    
```

# Summarizing numeric data

## Mean annual DDS expenditures by race/ethnicity

::::: columns
::: {.column width="45%"}
```{r}
mean(dds.discr$expenditures)

dds.discr %>% 
  summarize(
    ave = mean(expenditures),
    SD = sd(expenditures),
    med = median(expenditures))
```
:::

::: {.column width="55%"}
```{r}
#| code-line-numbers: "2"
dds.discr %>% 
  group_by(ethnicity) %>% 
  summarize(
    ave = mean(expenditures),
    SD = sd(expenditures),
    med = median(expenditures))
```
:::
:::::

## `get_summary_stats()` from `rstatix` package

```{r}
dds.discr %>% get_summary_stats()

dds.discr %>% 
  group_by(ethnicity) %>%
  get_summary_stats(expenditures, type = "common")
```

## How to force all output to be shown? (1/2)

Use `kable()` from the `knitr` package.

```{r}
dds.discr %>% get_summary_stats() %>% kable()
```

## How to force all output to be shown? `knitr` (2/2)

Use `kable()` from the `knitr` package.

```{r}
dds.discr %>% 
  group_by(ethnicity) %>%
  get_summary_stats(expenditures, type = "common") %>% 
  kable()
```

# Back to research question

## Case study: discrimination in developmental disability support (1.7.1)

-   **Previous research**
    -   Researchers examined DDS expenditures for developmentally disabled residents by ethnicity
    -   Found that the mean annual expenditures on Hispanics was less than that on White non-Hispanics.
-   **Result**: an allegation of ethnic discrimination was brought against the California DDS.
-   **Question: Are the data sufficient evidence of ethnic discrimination?**
